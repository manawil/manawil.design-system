import * as _stitches_react_types_styled_component from '@stitches/react/types/styled-component';
import * as _stitches_react_types_css_util from '@stitches/react/types/css-util';
import { ComponentProps, ReactNode } from 'react';

declare const Button: _stitches_react_types_styled_component.StyledComponent<"button", {
    variant?: "outline" | "primary" | "secondary" | "danger" | "ghost" | undefined;
}, {
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, _stitches_react_types_css_util.CSS<{
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, {
    colors: {
        readonly 'primary-50': "#DEECFF";
        readonly 'primary-100': "#BAD6FF";
        readonly 'primary-200': "#82B5FF";
        readonly 'primary-300': "#549AFF";
        readonly 'primary-400': "#217CFF";
        readonly 'primary-500': "#005CE1";
        readonly 'primary-600': "#004BB7";
        readonly 'primary-700': "#003C93";
        readonly 'primary-800': "#002F72";
        readonly 'primary-900': "#00204E";
        readonly 'secondary-50': "#FFF2C0";
        readonly 'secondary-100': "#FFE78C";
        readonly 'secondary-200': "#FFDE66";
        readonly 'secondary-300': "#FFD94A";
        readonly 'secondary-400': "#FFD229";
        readonly 'secondary-500': "#FBC80B";
        readonly 'secondary-600': "#E5B400";
        readonly 'secondary-700': "#C59A00";
        readonly 'secondary-800': "#A38000";
        readonly 'secondary-900': "#7A6000";
        readonly 'gray-50': "#F4F4F4";
        readonly 'gray-100': "#EAEAEA";
        readonly 'gray-200': "#DDDDDD";
        readonly 'gray-300': "#BCBCBC";
        readonly 'gray-400': "#969696";
        readonly 'gray-500': "#787878";
        readonly 'gray-600': "#606060";
        readonly 'gray-700': "#484848";
        readonly 'gray-800': "#323232";
        readonly 'gray-900': "#222222";
        readonly 'success-light': "#04D361";
        readonly 'success-dark': "#1B873F";
        readonly 'danger-light': "#F75A68";
        readonly 'danger-dark': "#CC2937";
    };
    fontSizes: {
        readonly xs: "0.75rem";
        readonly sm: "0.875rem";
        readonly md: "1rem";
        readonly lg: "1.25rem";
        readonly xl: "1.5rem";
        readonly '2xl': "2rem";
        readonly '3xl': "3rem";
        readonly '4xl': "4rem";
    };
    fontWeights: {
        readonly regular: 400;
        readonly medium: 500;
        readonly bold: 700;
    };
    lineHeights: {
        readonly shorter: "120%";
        readonly short: "140%";
        readonly tall: "160%";
        readonly taller: "180%";
    };
    borderWidths: {
        readonly thin: "1px";
        readonly mid: "2px";
        readonly thick: "4px";
    };
    fonts: {
        readonly default: "DM Sans, sans-serif";
    };
    radii: {
        readonly 'rounded-xs': "4px";
        readonly 'rounded-sm': "8px";
        readonly 'rounded-md': "16px";
        readonly 'rounded-full': "999px";
    };
    space: {
        readonly 0: "0";
        readonly 1: "0.25rem";
        readonly 2: "0.5rem";
        readonly 3: "0.75rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 8: "2rem";
        readonly 10: "2.5rem";
        readonly 12: "3rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 40: "7rem";
    };
    zIndices: {
        readonly overlay: 9995;
        readonly modal: 9999;
    };
}, {
    width: "spacing";
    height: "spacing";
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    blockSize: "sizes";
    minBlockSize: "sizes";
    maxBlockSize: "sizes";
    inlineSize: "sizes";
    minInlineSize: "sizes";
    maxInlineSize: "sizes";
    minWidth: "sizes";
    maxWidth: "sizes";
    minHeight: "sizes";
    maxHeight: "sizes";
    flexBasis: "sizes";
    gridTemplateColumns: "sizes";
    gridTemplateRows: "sizes";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
interface ButtonProps extends ComponentProps<typeof Button> {
    variant: 'primary' | 'secondary' | 'outline' | 'danger' | 'ghost';
    children: ReactNode;
}

export { Button, ButtonProps };
