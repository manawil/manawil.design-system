import * as _stitches_react_types_styled_component from '@stitches/react/types/styled-component';
import * as _stitches_react_types_css_util from '@stitches/react/types/css-util';
import * as react from 'react';
import { ComponentProps, ReactNode, ReactElement, ElementType } from 'react';
import * as RadixCheckbox from '@radix-ui/react-checkbox';
import * as RadioGroup from '@radix-ui/react-radio-group';
import * as RadixAvatar from '@radix-ui/react-avatar';
import * as DropdownMenu from '@radix-ui/react-dropdown-menu';
import * as RadixTooltip from '@radix-ui/react-tooltip';
import * as Dialog from '@radix-ui/react-dialog';

declare const Button: _stitches_react_types_styled_component.StyledComponent<"button", {
    variant?: "outline" | "primary" | "secondary" | "danger" | "ghost" | undefined;
}, {
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, _stitches_react_types_css_util.CSS<{
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, {
    colors: {
        readonly 'primary-50': "#DEECFF";
        readonly 'primary-100': "#BAD6FF";
        readonly 'primary-200': "#82B5FF";
        readonly 'primary-300': "#549AFF";
        readonly 'primary-400': "#217CFF";
        readonly 'primary-500': "#005CE1";
        readonly 'primary-600': "#004BB7";
        readonly 'primary-700': "#003C93";
        readonly 'primary-800': "#002F72";
        readonly 'primary-900': "#00204E";
        readonly 'secondary-50': "#FFF2C0";
        readonly 'secondary-100': "#FFE78C";
        readonly 'secondary-200': "#FFDE66";
        readonly 'secondary-300': "#FFD94A";
        readonly 'secondary-400': "#FFD229";
        readonly 'secondary-500': "#FBC80B";
        readonly 'secondary-600': "#E5B400";
        readonly 'secondary-700': "#C59A00";
        readonly 'secondary-800': "#A38000";
        readonly 'secondary-900': "#7A6000";
        readonly 'gray-50': "#FAFAFA";
        readonly 'gray-100': "#EDEDED";
        readonly 'gray-200': "#DDDDDD";
        readonly 'gray-300': "#BCBCBC";
        readonly 'gray-400': "#969696";
        readonly 'gray-500': "#787878";
        readonly 'gray-600': "#606060";
        readonly 'gray-700': "#484848";
        readonly 'gray-800': "#323232";
        readonly 'gray-900': "#222222";
        readonly 'success-light': "#04D361";
        readonly 'success-dark': "#1B873F";
        readonly 'danger-light': "#F75A68";
        readonly 'danger-dark': "#CC2937";
    };
    fontSizes: {
        readonly xs: "0.75rem";
        readonly sm: "0.875rem";
        readonly md: "1rem";
        readonly lg: "1.25rem";
        readonly xl: "1.5rem";
        readonly '2xl': "2rem";
        readonly '3xl': "3rem";
        readonly '4xl': "4rem";
    };
    fontWeights: {
        readonly regular: 400;
        readonly medium: 600;
        readonly bold: 700;
    };
    lineHeights: {
        readonly shorter: "120%";
        readonly short: "140%";
        readonly tall: "160%";
        readonly taller: "180%";
    };
    borderWidths: {
        readonly thin: "1px";
        readonly mid: "2px";
        readonly thick: "4px";
    };
    fonts: {
        readonly default: "DM Sans, sans-serif";
    };
    radii: {
        readonly 'rounded-xs': "4px";
        readonly 'rounded-sm': "8px";
        readonly 'rounded-md': "16px";
        readonly 'rounded-full': "999px";
    };
    space: {
        readonly 0: "0";
        readonly 1: "0.25rem";
        readonly 2: "0.5rem";
        readonly 3: "0.75rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 8: "2rem";
        readonly 10: "2.5rem";
        readonly 12: "3rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 40: "7rem";
    };
    zIndices: {
        readonly overlay: 9995;
        readonly modal: 9999;
    };
}, {
    width: "spacing";
    height: "spacing";
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    blockSize: "sizes";
    minBlockSize: "sizes";
    maxBlockSize: "sizes";
    inlineSize: "sizes";
    minInlineSize: "sizes";
    maxInlineSize: "sizes";
    minWidth: "sizes";
    maxWidth: "sizes";
    minHeight: "sizes";
    maxHeight: "sizes";
    flexBasis: "sizes";
    gridTemplateColumns: "sizes";
    gridTemplateRows: "sizes";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
interface ButtonProps extends ComponentProps<typeof Button> {
    variant: 'primary' | 'secondary' | 'outline' | 'danger' | 'ghost';
    children: ReactNode;
}

declare const CheckboxContainer: _stitches_react_types_styled_component.StyledComponent<react.ForwardRefExoticComponent<RadixCheckbox.CheckboxProps & react.RefAttributes<HTMLButtonElement>>, {}, {
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, _stitches_react_types_css_util.CSS<{
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, {
    colors: {
        readonly 'primary-50': "#DEECFF";
        readonly 'primary-100': "#BAD6FF";
        readonly 'primary-200': "#82B5FF";
        readonly 'primary-300': "#549AFF";
        readonly 'primary-400': "#217CFF";
        readonly 'primary-500': "#005CE1";
        readonly 'primary-600': "#004BB7";
        readonly 'primary-700': "#003C93";
        readonly 'primary-800': "#002F72";
        readonly 'primary-900': "#00204E";
        readonly 'secondary-50': "#FFF2C0";
        readonly 'secondary-100': "#FFE78C";
        readonly 'secondary-200': "#FFDE66";
        readonly 'secondary-300': "#FFD94A";
        readonly 'secondary-400': "#FFD229";
        readonly 'secondary-500': "#FBC80B";
        readonly 'secondary-600': "#E5B400";
        readonly 'secondary-700': "#C59A00";
        readonly 'secondary-800': "#A38000";
        readonly 'secondary-900': "#7A6000";
        readonly 'gray-50': "#FAFAFA";
        readonly 'gray-100': "#EDEDED";
        readonly 'gray-200': "#DDDDDD";
        readonly 'gray-300': "#BCBCBC";
        readonly 'gray-400': "#969696";
        readonly 'gray-500': "#787878";
        readonly 'gray-600': "#606060";
        readonly 'gray-700': "#484848";
        readonly 'gray-800': "#323232";
        readonly 'gray-900': "#222222";
        readonly 'success-light': "#04D361";
        readonly 'success-dark': "#1B873F";
        readonly 'danger-light': "#F75A68";
        readonly 'danger-dark': "#CC2937";
    };
    fontSizes: {
        readonly xs: "0.75rem";
        readonly sm: "0.875rem";
        readonly md: "1rem";
        readonly lg: "1.25rem";
        readonly xl: "1.5rem";
        readonly '2xl': "2rem";
        readonly '3xl': "3rem";
        readonly '4xl': "4rem";
    };
    fontWeights: {
        readonly regular: 400;
        readonly medium: 600;
        readonly bold: 700;
    };
    lineHeights: {
        readonly shorter: "120%";
        readonly short: "140%";
        readonly tall: "160%";
        readonly taller: "180%";
    };
    borderWidths: {
        readonly thin: "1px";
        readonly mid: "2px";
        readonly thick: "4px";
    };
    fonts: {
        readonly default: "DM Sans, sans-serif";
    };
    radii: {
        readonly 'rounded-xs': "4px";
        readonly 'rounded-sm': "8px";
        readonly 'rounded-md': "16px";
        readonly 'rounded-full': "999px";
    };
    space: {
        readonly 0: "0";
        readonly 1: "0.25rem";
        readonly 2: "0.5rem";
        readonly 3: "0.75rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 8: "2rem";
        readonly 10: "2.5rem";
        readonly 12: "3rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 40: "7rem";
    };
    zIndices: {
        readonly overlay: 9995;
        readonly modal: 9999;
    };
}, {
    width: "spacing";
    height: "spacing";
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    blockSize: "sizes";
    minBlockSize: "sizes";
    maxBlockSize: "sizes";
    inlineSize: "sizes";
    minInlineSize: "sizes";
    maxInlineSize: "sizes";
    minWidth: "sizes";
    maxWidth: "sizes";
    minHeight: "sizes";
    maxHeight: "sizes";
    flexBasis: "sizes";
    gridTemplateColumns: "sizes";
    gridTemplateRows: "sizes";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
declare const CheckboxIndicator: _stitches_react_types_styled_component.StyledComponent<react.ForwardRefExoticComponent<RadixCheckbox.CheckboxIndicatorProps & react.RefAttributes<HTMLSpanElement>>, {}, {
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, _stitches_react_types_css_util.CSS<{
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, {
    colors: {
        readonly 'primary-50': "#DEECFF";
        readonly 'primary-100': "#BAD6FF";
        readonly 'primary-200': "#82B5FF";
        readonly 'primary-300': "#549AFF";
        readonly 'primary-400': "#217CFF";
        readonly 'primary-500': "#005CE1";
        readonly 'primary-600': "#004BB7";
        readonly 'primary-700': "#003C93";
        readonly 'primary-800': "#002F72";
        readonly 'primary-900': "#00204E";
        readonly 'secondary-50': "#FFF2C0";
        readonly 'secondary-100': "#FFE78C";
        readonly 'secondary-200': "#FFDE66";
        readonly 'secondary-300': "#FFD94A";
        readonly 'secondary-400': "#FFD229";
        readonly 'secondary-500': "#FBC80B";
        readonly 'secondary-600': "#E5B400";
        readonly 'secondary-700': "#C59A00";
        readonly 'secondary-800': "#A38000";
        readonly 'secondary-900': "#7A6000";
        readonly 'gray-50': "#FAFAFA";
        readonly 'gray-100': "#EDEDED";
        readonly 'gray-200': "#DDDDDD";
        readonly 'gray-300': "#BCBCBC";
        readonly 'gray-400': "#969696";
        readonly 'gray-500': "#787878";
        readonly 'gray-600': "#606060";
        readonly 'gray-700': "#484848";
        readonly 'gray-800': "#323232";
        readonly 'gray-900': "#222222";
        readonly 'success-light': "#04D361";
        readonly 'success-dark': "#1B873F";
        readonly 'danger-light': "#F75A68";
        readonly 'danger-dark': "#CC2937";
    };
    fontSizes: {
        readonly xs: "0.75rem";
        readonly sm: "0.875rem";
        readonly md: "1rem";
        readonly lg: "1.25rem";
        readonly xl: "1.5rem";
        readonly '2xl': "2rem";
        readonly '3xl': "3rem";
        readonly '4xl': "4rem";
    };
    fontWeights: {
        readonly regular: 400;
        readonly medium: 600;
        readonly bold: 700;
    };
    lineHeights: {
        readonly shorter: "120%";
        readonly short: "140%";
        readonly tall: "160%";
        readonly taller: "180%";
    };
    borderWidths: {
        readonly thin: "1px";
        readonly mid: "2px";
        readonly thick: "4px";
    };
    fonts: {
        readonly default: "DM Sans, sans-serif";
    };
    radii: {
        readonly 'rounded-xs': "4px";
        readonly 'rounded-sm': "8px";
        readonly 'rounded-md': "16px";
        readonly 'rounded-full': "999px";
    };
    space: {
        readonly 0: "0";
        readonly 1: "0.25rem";
        readonly 2: "0.5rem";
        readonly 3: "0.75rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 8: "2rem";
        readonly 10: "2.5rem";
        readonly 12: "3rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 40: "7rem";
    };
    zIndices: {
        readonly overlay: 9995;
        readonly modal: 9999;
    };
}, {
    width: "spacing";
    height: "spacing";
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    blockSize: "sizes";
    minBlockSize: "sizes";
    maxBlockSize: "sizes";
    inlineSize: "sizes";
    minInlineSize: "sizes";
    maxInlineSize: "sizes";
    minWidth: "sizes";
    maxWidth: "sizes";
    minHeight: "sizes";
    maxHeight: "sizes";
    flexBasis: "sizes";
    gridTemplateColumns: "sizes";
    gridTemplateRows: "sizes";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
type CheckboxProps = ComponentProps<typeof CheckboxContainer>;
declare function Checkbox(props: CheckboxProps): JSX.Element;

declare const RadioButtonContainer: _stitches_react_types_styled_component.StyledComponent<react.ForwardRefExoticComponent<RadioGroup.RadioGroupProps & react.RefAttributes<HTMLDivElement>>, {}, {
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, _stitches_react_types_css_util.CSS<{
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, {
    colors: {
        readonly 'primary-50': "#DEECFF";
        readonly 'primary-100': "#BAD6FF";
        readonly 'primary-200': "#82B5FF";
        readonly 'primary-300': "#549AFF";
        readonly 'primary-400': "#217CFF";
        readonly 'primary-500': "#005CE1";
        readonly 'primary-600': "#004BB7";
        readonly 'primary-700': "#003C93";
        readonly 'primary-800': "#002F72";
        readonly 'primary-900': "#00204E";
        readonly 'secondary-50': "#FFF2C0";
        readonly 'secondary-100': "#FFE78C";
        readonly 'secondary-200': "#FFDE66";
        readonly 'secondary-300': "#FFD94A";
        readonly 'secondary-400': "#FFD229";
        readonly 'secondary-500': "#FBC80B";
        readonly 'secondary-600': "#E5B400";
        readonly 'secondary-700': "#C59A00";
        readonly 'secondary-800': "#A38000";
        readonly 'secondary-900': "#7A6000";
        readonly 'gray-50': "#FAFAFA";
        readonly 'gray-100': "#EDEDED";
        readonly 'gray-200': "#DDDDDD";
        readonly 'gray-300': "#BCBCBC";
        readonly 'gray-400': "#969696";
        readonly 'gray-500': "#787878";
        readonly 'gray-600': "#606060";
        readonly 'gray-700': "#484848";
        readonly 'gray-800': "#323232";
        readonly 'gray-900': "#222222";
        readonly 'success-light': "#04D361";
        readonly 'success-dark': "#1B873F";
        readonly 'danger-light': "#F75A68";
        readonly 'danger-dark': "#CC2937";
    };
    fontSizes: {
        readonly xs: "0.75rem";
        readonly sm: "0.875rem";
        readonly md: "1rem";
        readonly lg: "1.25rem";
        readonly xl: "1.5rem";
        readonly '2xl': "2rem";
        readonly '3xl': "3rem";
        readonly '4xl': "4rem";
    };
    fontWeights: {
        readonly regular: 400;
        readonly medium: 600;
        readonly bold: 700;
    };
    lineHeights: {
        readonly shorter: "120%";
        readonly short: "140%";
        readonly tall: "160%";
        readonly taller: "180%";
    };
    borderWidths: {
        readonly thin: "1px";
        readonly mid: "2px";
        readonly thick: "4px";
    };
    fonts: {
        readonly default: "DM Sans, sans-serif";
    };
    radii: {
        readonly 'rounded-xs': "4px";
        readonly 'rounded-sm': "8px";
        readonly 'rounded-md': "16px";
        readonly 'rounded-full': "999px";
    };
    space: {
        readonly 0: "0";
        readonly 1: "0.25rem";
        readonly 2: "0.5rem";
        readonly 3: "0.75rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 8: "2rem";
        readonly 10: "2.5rem";
        readonly 12: "3rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 40: "7rem";
    };
    zIndices: {
        readonly overlay: 9995;
        readonly modal: 9999;
    };
}, {
    width: "spacing";
    height: "spacing";
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    blockSize: "sizes";
    minBlockSize: "sizes";
    maxBlockSize: "sizes";
    inlineSize: "sizes";
    minInlineSize: "sizes";
    maxInlineSize: "sizes";
    minWidth: "sizes";
    maxWidth: "sizes";
    minHeight: "sizes";
    maxHeight: "sizes";
    flexBasis: "sizes";
    gridTemplateColumns: "sizes";
    gridTemplateRows: "sizes";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
declare const RadioButtonItem: _stitches_react_types_styled_component.StyledComponent<react.ForwardRefExoticComponent<RadioGroup.RadioGroupItemProps & react.RefAttributes<HTMLButtonElement>>, {}, {
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, _stitches_react_types_css_util.CSS<{
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, {
    colors: {
        readonly 'primary-50': "#DEECFF";
        readonly 'primary-100': "#BAD6FF";
        readonly 'primary-200': "#82B5FF";
        readonly 'primary-300': "#549AFF";
        readonly 'primary-400': "#217CFF";
        readonly 'primary-500': "#005CE1";
        readonly 'primary-600': "#004BB7";
        readonly 'primary-700': "#003C93";
        readonly 'primary-800': "#002F72";
        readonly 'primary-900': "#00204E";
        readonly 'secondary-50': "#FFF2C0";
        readonly 'secondary-100': "#FFE78C";
        readonly 'secondary-200': "#FFDE66";
        readonly 'secondary-300': "#FFD94A";
        readonly 'secondary-400': "#FFD229";
        readonly 'secondary-500': "#FBC80B";
        readonly 'secondary-600': "#E5B400";
        readonly 'secondary-700': "#C59A00";
        readonly 'secondary-800': "#A38000";
        readonly 'secondary-900': "#7A6000";
        readonly 'gray-50': "#FAFAFA";
        readonly 'gray-100': "#EDEDED";
        readonly 'gray-200': "#DDDDDD";
        readonly 'gray-300': "#BCBCBC";
        readonly 'gray-400': "#969696";
        readonly 'gray-500': "#787878";
        readonly 'gray-600': "#606060";
        readonly 'gray-700': "#484848";
        readonly 'gray-800': "#323232";
        readonly 'gray-900': "#222222";
        readonly 'success-light': "#04D361";
        readonly 'success-dark': "#1B873F";
        readonly 'danger-light': "#F75A68";
        readonly 'danger-dark': "#CC2937";
    };
    fontSizes: {
        readonly xs: "0.75rem";
        readonly sm: "0.875rem";
        readonly md: "1rem";
        readonly lg: "1.25rem";
        readonly xl: "1.5rem";
        readonly '2xl': "2rem";
        readonly '3xl': "3rem";
        readonly '4xl': "4rem";
    };
    fontWeights: {
        readonly regular: 400;
        readonly medium: 600;
        readonly bold: 700;
    };
    lineHeights: {
        readonly shorter: "120%";
        readonly short: "140%";
        readonly tall: "160%";
        readonly taller: "180%";
    };
    borderWidths: {
        readonly thin: "1px";
        readonly mid: "2px";
        readonly thick: "4px";
    };
    fonts: {
        readonly default: "DM Sans, sans-serif";
    };
    radii: {
        readonly 'rounded-xs': "4px";
        readonly 'rounded-sm': "8px";
        readonly 'rounded-md': "16px";
        readonly 'rounded-full': "999px";
    };
    space: {
        readonly 0: "0";
        readonly 1: "0.25rem";
        readonly 2: "0.5rem";
        readonly 3: "0.75rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 8: "2rem";
        readonly 10: "2.5rem";
        readonly 12: "3rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 40: "7rem";
    };
    zIndices: {
        readonly overlay: 9995;
        readonly modal: 9999;
    };
}, {
    width: "spacing";
    height: "spacing";
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    blockSize: "sizes";
    minBlockSize: "sizes";
    maxBlockSize: "sizes";
    inlineSize: "sizes";
    minInlineSize: "sizes";
    maxInlineSize: "sizes";
    minWidth: "sizes";
    maxWidth: "sizes";
    minHeight: "sizes";
    maxHeight: "sizes";
    flexBasis: "sizes";
    gridTemplateColumns: "sizes";
    gridTemplateRows: "sizes";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
declare const RadioButtonIndicator: _stitches_react_types_styled_component.StyledComponent<react.ForwardRefExoticComponent<RadioGroup.RadioGroupIndicatorProps & react.RefAttributes<HTMLSpanElement>>, {}, {
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, _stitches_react_types_css_util.CSS<{
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, {
    colors: {
        readonly 'primary-50': "#DEECFF";
        readonly 'primary-100': "#BAD6FF";
        readonly 'primary-200': "#82B5FF";
        readonly 'primary-300': "#549AFF";
        readonly 'primary-400': "#217CFF";
        readonly 'primary-500': "#005CE1";
        readonly 'primary-600': "#004BB7";
        readonly 'primary-700': "#003C93";
        readonly 'primary-800': "#002F72";
        readonly 'primary-900': "#00204E";
        readonly 'secondary-50': "#FFF2C0";
        readonly 'secondary-100': "#FFE78C";
        readonly 'secondary-200': "#FFDE66";
        readonly 'secondary-300': "#FFD94A";
        readonly 'secondary-400': "#FFD229";
        readonly 'secondary-500': "#FBC80B";
        readonly 'secondary-600': "#E5B400";
        readonly 'secondary-700': "#C59A00";
        readonly 'secondary-800': "#A38000";
        readonly 'secondary-900': "#7A6000";
        readonly 'gray-50': "#FAFAFA";
        readonly 'gray-100': "#EDEDED";
        readonly 'gray-200': "#DDDDDD";
        readonly 'gray-300': "#BCBCBC";
        readonly 'gray-400': "#969696";
        readonly 'gray-500': "#787878";
        readonly 'gray-600': "#606060";
        readonly 'gray-700': "#484848";
        readonly 'gray-800': "#323232";
        readonly 'gray-900': "#222222";
        readonly 'success-light': "#04D361";
        readonly 'success-dark': "#1B873F";
        readonly 'danger-light': "#F75A68";
        readonly 'danger-dark': "#CC2937";
    };
    fontSizes: {
        readonly xs: "0.75rem";
        readonly sm: "0.875rem";
        readonly md: "1rem";
        readonly lg: "1.25rem";
        readonly xl: "1.5rem";
        readonly '2xl': "2rem";
        readonly '3xl': "3rem";
        readonly '4xl': "4rem";
    };
    fontWeights: {
        readonly regular: 400;
        readonly medium: 600;
        readonly bold: 700;
    };
    lineHeights: {
        readonly shorter: "120%";
        readonly short: "140%";
        readonly tall: "160%";
        readonly taller: "180%";
    };
    borderWidths: {
        readonly thin: "1px";
        readonly mid: "2px";
        readonly thick: "4px";
    };
    fonts: {
        readonly default: "DM Sans, sans-serif";
    };
    radii: {
        readonly 'rounded-xs': "4px";
        readonly 'rounded-sm': "8px";
        readonly 'rounded-md': "16px";
        readonly 'rounded-full': "999px";
    };
    space: {
        readonly 0: "0";
        readonly 1: "0.25rem";
        readonly 2: "0.5rem";
        readonly 3: "0.75rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 8: "2rem";
        readonly 10: "2.5rem";
        readonly 12: "3rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 40: "7rem";
    };
    zIndices: {
        readonly overlay: 9995;
        readonly modal: 9999;
    };
}, {
    width: "spacing";
    height: "spacing";
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    blockSize: "sizes";
    minBlockSize: "sizes";
    maxBlockSize: "sizes";
    inlineSize: "sizes";
    minInlineSize: "sizes";
    maxInlineSize: "sizes";
    minWidth: "sizes";
    maxWidth: "sizes";
    minHeight: "sizes";
    maxHeight: "sizes";
    flexBasis: "sizes";
    gridTemplateColumns: "sizes";
    gridTemplateRows: "sizes";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
interface RadioButtonProps extends ComponentProps<typeof RadioButtonContainer> {
    label: string;
    id: string;
    value: string;
}
declare function RadioButton({ label, id, value, ...rest }: RadioButtonProps): JSX.Element;

interface TextFieldProps extends ComponentProps<typeof Input> {
    icon?: ReactElement;
    onIconClick?: () => void;
    error?: boolean;
}
declare const InputContainer: _stitches_react_types_styled_component.StyledComponent<"div", {}, {
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, _stitches_react_types_css_util.CSS<{
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, {
    colors: {
        readonly 'primary-50': "#DEECFF";
        readonly 'primary-100': "#BAD6FF";
        readonly 'primary-200': "#82B5FF";
        readonly 'primary-300': "#549AFF";
        readonly 'primary-400': "#217CFF";
        readonly 'primary-500': "#005CE1";
        readonly 'primary-600': "#004BB7";
        readonly 'primary-700': "#003C93";
        readonly 'primary-800': "#002F72";
        readonly 'primary-900': "#00204E";
        readonly 'secondary-50': "#FFF2C0";
        readonly 'secondary-100': "#FFE78C";
        readonly 'secondary-200': "#FFDE66";
        readonly 'secondary-300': "#FFD94A";
        readonly 'secondary-400': "#FFD229";
        readonly 'secondary-500': "#FBC80B";
        readonly 'secondary-600': "#E5B400";
        readonly 'secondary-700': "#C59A00";
        readonly 'secondary-800': "#A38000";
        readonly 'secondary-900': "#7A6000";
        readonly 'gray-50': "#FAFAFA";
        readonly 'gray-100': "#EDEDED";
        readonly 'gray-200': "#DDDDDD";
        readonly 'gray-300': "#BCBCBC";
        readonly 'gray-400': "#969696";
        readonly 'gray-500': "#787878";
        readonly 'gray-600': "#606060";
        readonly 'gray-700': "#484848";
        readonly 'gray-800': "#323232";
        readonly 'gray-900': "#222222";
        readonly 'success-light': "#04D361";
        readonly 'success-dark': "#1B873F";
        readonly 'danger-light': "#F75A68";
        readonly 'danger-dark': "#CC2937";
    };
    fontSizes: {
        readonly xs: "0.75rem";
        readonly sm: "0.875rem";
        readonly md: "1rem";
        readonly lg: "1.25rem";
        readonly xl: "1.5rem";
        readonly '2xl': "2rem";
        readonly '3xl': "3rem";
        readonly '4xl': "4rem";
    };
    fontWeights: {
        readonly regular: 400;
        readonly medium: 600;
        readonly bold: 700;
    };
    lineHeights: {
        readonly shorter: "120%";
        readonly short: "140%";
        readonly tall: "160%";
        readonly taller: "180%";
    };
    borderWidths: {
        readonly thin: "1px";
        readonly mid: "2px";
        readonly thick: "4px";
    };
    fonts: {
        readonly default: "DM Sans, sans-serif";
    };
    radii: {
        readonly 'rounded-xs': "4px";
        readonly 'rounded-sm': "8px";
        readonly 'rounded-md': "16px";
        readonly 'rounded-full': "999px";
    };
    space: {
        readonly 0: "0";
        readonly 1: "0.25rem";
        readonly 2: "0.5rem";
        readonly 3: "0.75rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 8: "2rem";
        readonly 10: "2.5rem";
        readonly 12: "3rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 40: "7rem";
    };
    zIndices: {
        readonly overlay: 9995;
        readonly modal: 9999;
    };
}, {
    width: "spacing";
    height: "spacing";
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    blockSize: "sizes";
    minBlockSize: "sizes";
    maxBlockSize: "sizes";
    inlineSize: "sizes";
    minInlineSize: "sizes";
    maxInlineSize: "sizes";
    minWidth: "sizes";
    maxWidth: "sizes";
    minHeight: "sizes";
    maxHeight: "sizes";
    flexBasis: "sizes";
    gridTemplateColumns: "sizes";
    gridTemplateRows: "sizes";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
declare const InputContent: _stitches_react_types_styled_component.StyledComponent<"div", {}, {
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, _stitches_react_types_css_util.CSS<{
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, {
    colors: {
        readonly 'primary-50': "#DEECFF";
        readonly 'primary-100': "#BAD6FF";
        readonly 'primary-200': "#82B5FF";
        readonly 'primary-300': "#549AFF";
        readonly 'primary-400': "#217CFF";
        readonly 'primary-500': "#005CE1";
        readonly 'primary-600': "#004BB7";
        readonly 'primary-700': "#003C93";
        readonly 'primary-800': "#002F72";
        readonly 'primary-900': "#00204E";
        readonly 'secondary-50': "#FFF2C0";
        readonly 'secondary-100': "#FFE78C";
        readonly 'secondary-200': "#FFDE66";
        readonly 'secondary-300': "#FFD94A";
        readonly 'secondary-400': "#FFD229";
        readonly 'secondary-500': "#FBC80B";
        readonly 'secondary-600': "#E5B400";
        readonly 'secondary-700': "#C59A00";
        readonly 'secondary-800': "#A38000";
        readonly 'secondary-900': "#7A6000";
        readonly 'gray-50': "#FAFAFA";
        readonly 'gray-100': "#EDEDED";
        readonly 'gray-200': "#DDDDDD";
        readonly 'gray-300': "#BCBCBC";
        readonly 'gray-400': "#969696";
        readonly 'gray-500': "#787878";
        readonly 'gray-600': "#606060";
        readonly 'gray-700': "#484848";
        readonly 'gray-800': "#323232";
        readonly 'gray-900': "#222222";
        readonly 'success-light': "#04D361";
        readonly 'success-dark': "#1B873F";
        readonly 'danger-light': "#F75A68";
        readonly 'danger-dark': "#CC2937";
    };
    fontSizes: {
        readonly xs: "0.75rem";
        readonly sm: "0.875rem";
        readonly md: "1rem";
        readonly lg: "1.25rem";
        readonly xl: "1.5rem";
        readonly '2xl': "2rem";
        readonly '3xl': "3rem";
        readonly '4xl': "4rem";
    };
    fontWeights: {
        readonly regular: 400;
        readonly medium: 600;
        readonly bold: 700;
    };
    lineHeights: {
        readonly shorter: "120%";
        readonly short: "140%";
        readonly tall: "160%";
        readonly taller: "180%";
    };
    borderWidths: {
        readonly thin: "1px";
        readonly mid: "2px";
        readonly thick: "4px";
    };
    fonts: {
        readonly default: "DM Sans, sans-serif";
    };
    radii: {
        readonly 'rounded-xs': "4px";
        readonly 'rounded-sm': "8px";
        readonly 'rounded-md': "16px";
        readonly 'rounded-full': "999px";
    };
    space: {
        readonly 0: "0";
        readonly 1: "0.25rem";
        readonly 2: "0.5rem";
        readonly 3: "0.75rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 8: "2rem";
        readonly 10: "2.5rem";
        readonly 12: "3rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 40: "7rem";
    };
    zIndices: {
        readonly overlay: 9995;
        readonly modal: 9999;
    };
}, {
    width: "spacing";
    height: "spacing";
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    blockSize: "sizes";
    minBlockSize: "sizes";
    maxBlockSize: "sizes";
    inlineSize: "sizes";
    minInlineSize: "sizes";
    maxInlineSize: "sizes";
    minWidth: "sizes";
    maxWidth: "sizes";
    minHeight: "sizes";
    maxHeight: "sizes";
    flexBasis: "sizes";
    gridTemplateColumns: "sizes";
    gridTemplateRows: "sizes";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
declare const Input: _stitches_react_types_styled_component.StyledComponent<"input", {
    hasIcon?: boolean | "true" | undefined;
    hasError?: boolean | "true" | undefined;
}, {
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, _stitches_react_types_css_util.CSS<{
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, {
    colors: {
        readonly 'primary-50': "#DEECFF";
        readonly 'primary-100': "#BAD6FF";
        readonly 'primary-200': "#82B5FF";
        readonly 'primary-300': "#549AFF";
        readonly 'primary-400': "#217CFF";
        readonly 'primary-500': "#005CE1";
        readonly 'primary-600': "#004BB7";
        readonly 'primary-700': "#003C93";
        readonly 'primary-800': "#002F72";
        readonly 'primary-900': "#00204E";
        readonly 'secondary-50': "#FFF2C0";
        readonly 'secondary-100': "#FFE78C";
        readonly 'secondary-200': "#FFDE66";
        readonly 'secondary-300': "#FFD94A";
        readonly 'secondary-400': "#FFD229";
        readonly 'secondary-500': "#FBC80B";
        readonly 'secondary-600': "#E5B400";
        readonly 'secondary-700': "#C59A00";
        readonly 'secondary-800': "#A38000";
        readonly 'secondary-900': "#7A6000";
        readonly 'gray-50': "#FAFAFA";
        readonly 'gray-100': "#EDEDED";
        readonly 'gray-200': "#DDDDDD";
        readonly 'gray-300': "#BCBCBC";
        readonly 'gray-400': "#969696";
        readonly 'gray-500': "#787878";
        readonly 'gray-600': "#606060";
        readonly 'gray-700': "#484848";
        readonly 'gray-800': "#323232";
        readonly 'gray-900': "#222222";
        readonly 'success-light': "#04D361";
        readonly 'success-dark': "#1B873F";
        readonly 'danger-light': "#F75A68";
        readonly 'danger-dark': "#CC2937";
    };
    fontSizes: {
        readonly xs: "0.75rem";
        readonly sm: "0.875rem";
        readonly md: "1rem";
        readonly lg: "1.25rem";
        readonly xl: "1.5rem";
        readonly '2xl': "2rem";
        readonly '3xl': "3rem";
        readonly '4xl': "4rem";
    };
    fontWeights: {
        readonly regular: 400;
        readonly medium: 600;
        readonly bold: 700;
    };
    lineHeights: {
        readonly shorter: "120%";
        readonly short: "140%";
        readonly tall: "160%";
        readonly taller: "180%";
    };
    borderWidths: {
        readonly thin: "1px";
        readonly mid: "2px";
        readonly thick: "4px";
    };
    fonts: {
        readonly default: "DM Sans, sans-serif";
    };
    radii: {
        readonly 'rounded-xs': "4px";
        readonly 'rounded-sm': "8px";
        readonly 'rounded-md': "16px";
        readonly 'rounded-full': "999px";
    };
    space: {
        readonly 0: "0";
        readonly 1: "0.25rem";
        readonly 2: "0.5rem";
        readonly 3: "0.75rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 8: "2rem";
        readonly 10: "2.5rem";
        readonly 12: "3rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 40: "7rem";
    };
    zIndices: {
        readonly overlay: 9995;
        readonly modal: 9999;
    };
}, {
    width: "spacing";
    height: "spacing";
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    blockSize: "sizes";
    minBlockSize: "sizes";
    maxBlockSize: "sizes";
    inlineSize: "sizes";
    minInlineSize: "sizes";
    maxInlineSize: "sizes";
    minWidth: "sizes";
    maxWidth: "sizes";
    minHeight: "sizes";
    maxHeight: "sizes";
    flexBasis: "sizes";
    gridTemplateColumns: "sizes";
    gridTemplateRows: "sizes";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
declare function TextField({ icon, onIconClick, error, ...rest }: TextFieldProps): JSX.Element;

declare const IconButtonContainer: _stitches_react_types_styled_component.StyledComponent<"button", {}, {
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, _stitches_react_types_css_util.CSS<{
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, {
    colors: {
        readonly 'primary-50': "#DEECFF";
        readonly 'primary-100': "#BAD6FF";
        readonly 'primary-200': "#82B5FF";
        readonly 'primary-300': "#549AFF";
        readonly 'primary-400': "#217CFF";
        readonly 'primary-500': "#005CE1";
        readonly 'primary-600': "#004BB7";
        readonly 'primary-700': "#003C93";
        readonly 'primary-800': "#002F72";
        readonly 'primary-900': "#00204E";
        readonly 'secondary-50': "#FFF2C0";
        readonly 'secondary-100': "#FFE78C";
        readonly 'secondary-200': "#FFDE66";
        readonly 'secondary-300': "#FFD94A";
        readonly 'secondary-400': "#FFD229";
        readonly 'secondary-500': "#FBC80B";
        readonly 'secondary-600': "#E5B400";
        readonly 'secondary-700': "#C59A00";
        readonly 'secondary-800': "#A38000";
        readonly 'secondary-900': "#7A6000";
        readonly 'gray-50': "#FAFAFA";
        readonly 'gray-100': "#EDEDED";
        readonly 'gray-200': "#DDDDDD";
        readonly 'gray-300': "#BCBCBC";
        readonly 'gray-400': "#969696";
        readonly 'gray-500': "#787878";
        readonly 'gray-600': "#606060";
        readonly 'gray-700': "#484848";
        readonly 'gray-800': "#323232";
        readonly 'gray-900': "#222222";
        readonly 'success-light': "#04D361";
        readonly 'success-dark': "#1B873F";
        readonly 'danger-light': "#F75A68";
        readonly 'danger-dark': "#CC2937";
    };
    fontSizes: {
        readonly xs: "0.75rem";
        readonly sm: "0.875rem";
        readonly md: "1rem";
        readonly lg: "1.25rem";
        readonly xl: "1.5rem";
        readonly '2xl': "2rem";
        readonly '3xl': "3rem";
        readonly '4xl': "4rem";
    };
    fontWeights: {
        readonly regular: 400;
        readonly medium: 600;
        readonly bold: 700;
    };
    lineHeights: {
        readonly shorter: "120%";
        readonly short: "140%";
        readonly tall: "160%";
        readonly taller: "180%";
    };
    borderWidths: {
        readonly thin: "1px";
        readonly mid: "2px";
        readonly thick: "4px";
    };
    fonts: {
        readonly default: "DM Sans, sans-serif";
    };
    radii: {
        readonly 'rounded-xs': "4px";
        readonly 'rounded-sm': "8px";
        readonly 'rounded-md': "16px";
        readonly 'rounded-full': "999px";
    };
    space: {
        readonly 0: "0";
        readonly 1: "0.25rem";
        readonly 2: "0.5rem";
        readonly 3: "0.75rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 8: "2rem";
        readonly 10: "2.5rem";
        readonly 12: "3rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 40: "7rem";
    };
    zIndices: {
        readonly overlay: 9995;
        readonly modal: 9999;
    };
}, {
    width: "spacing";
    height: "spacing";
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    blockSize: "sizes";
    minBlockSize: "sizes";
    maxBlockSize: "sizes";
    inlineSize: "sizes";
    minInlineSize: "sizes";
    maxInlineSize: "sizes";
    minWidth: "sizes";
    maxWidth: "sizes";
    minHeight: "sizes";
    maxHeight: "sizes";
    flexBasis: "sizes";
    gridTemplateColumns: "sizes";
    gridTemplateRows: "sizes";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
interface IconButtonProps extends ComponentProps<typeof IconButtonContainer> {
    icon: ReactNode;
}
declare function IconButton({ icon, ...rest }: IconButtonProps): JSX.Element;

declare const Box: _stitches_react_types_styled_component.StyledComponent<"div", {}, {
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, _stitches_react_types_css_util.CSS<{
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, {
    colors: {
        readonly 'primary-50': "#DEECFF";
        readonly 'primary-100': "#BAD6FF";
        readonly 'primary-200': "#82B5FF";
        readonly 'primary-300': "#549AFF";
        readonly 'primary-400': "#217CFF";
        readonly 'primary-500': "#005CE1";
        readonly 'primary-600': "#004BB7";
        readonly 'primary-700': "#003C93";
        readonly 'primary-800': "#002F72";
        readonly 'primary-900': "#00204E";
        readonly 'secondary-50': "#FFF2C0";
        readonly 'secondary-100': "#FFE78C";
        readonly 'secondary-200': "#FFDE66";
        readonly 'secondary-300': "#FFD94A";
        readonly 'secondary-400': "#FFD229";
        readonly 'secondary-500': "#FBC80B";
        readonly 'secondary-600': "#E5B400";
        readonly 'secondary-700': "#C59A00";
        readonly 'secondary-800': "#A38000";
        readonly 'secondary-900': "#7A6000";
        readonly 'gray-50': "#FAFAFA";
        readonly 'gray-100': "#EDEDED";
        readonly 'gray-200': "#DDDDDD";
        readonly 'gray-300': "#BCBCBC";
        readonly 'gray-400': "#969696";
        readonly 'gray-500': "#787878";
        readonly 'gray-600': "#606060";
        readonly 'gray-700': "#484848";
        readonly 'gray-800': "#323232";
        readonly 'gray-900': "#222222";
        readonly 'success-light': "#04D361";
        readonly 'success-dark': "#1B873F";
        readonly 'danger-light': "#F75A68";
        readonly 'danger-dark': "#CC2937";
    };
    fontSizes: {
        readonly xs: "0.75rem";
        readonly sm: "0.875rem";
        readonly md: "1rem";
        readonly lg: "1.25rem";
        readonly xl: "1.5rem";
        readonly '2xl': "2rem";
        readonly '3xl': "3rem";
        readonly '4xl': "4rem";
    };
    fontWeights: {
        readonly regular: 400;
        readonly medium: 600;
        readonly bold: 700;
    };
    lineHeights: {
        readonly shorter: "120%";
        readonly short: "140%";
        readonly tall: "160%";
        readonly taller: "180%";
    };
    borderWidths: {
        readonly thin: "1px";
        readonly mid: "2px";
        readonly thick: "4px";
    };
    fonts: {
        readonly default: "DM Sans, sans-serif";
    };
    radii: {
        readonly 'rounded-xs': "4px";
        readonly 'rounded-sm': "8px";
        readonly 'rounded-md': "16px";
        readonly 'rounded-full': "999px";
    };
    space: {
        readonly 0: "0";
        readonly 1: "0.25rem";
        readonly 2: "0.5rem";
        readonly 3: "0.75rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 8: "2rem";
        readonly 10: "2.5rem";
        readonly 12: "3rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 40: "7rem";
    };
    zIndices: {
        readonly overlay: 9995;
        readonly modal: 9999;
    };
}, {
    width: "spacing";
    height: "spacing";
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    blockSize: "sizes";
    minBlockSize: "sizes";
    maxBlockSize: "sizes";
    inlineSize: "sizes";
    minInlineSize: "sizes";
    maxInlineSize: "sizes";
    minWidth: "sizes";
    maxWidth: "sizes";
    minHeight: "sizes";
    maxHeight: "sizes";
    flexBasis: "sizes";
    gridTemplateColumns: "sizes";
    gridTemplateRows: "sizes";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
type BoxProps = ComponentProps<typeof Box>;

declare const AvatarContainer: _stitches_react_types_styled_component.StyledComponent<react.ForwardRefExoticComponent<RadixAvatar.AvatarProps & react.RefAttributes<HTMLSpanElement>>, {
    size?: "sm" | "md" | "xl" | undefined;
}, {
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, _stitches_react_types_css_util.CSS<{
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, {
    colors: {
        readonly 'primary-50': "#DEECFF";
        readonly 'primary-100': "#BAD6FF";
        readonly 'primary-200': "#82B5FF";
        readonly 'primary-300': "#549AFF";
        readonly 'primary-400': "#217CFF";
        readonly 'primary-500': "#005CE1";
        readonly 'primary-600': "#004BB7";
        readonly 'primary-700': "#003C93";
        readonly 'primary-800': "#002F72";
        readonly 'primary-900': "#00204E";
        readonly 'secondary-50': "#FFF2C0";
        readonly 'secondary-100': "#FFE78C";
        readonly 'secondary-200': "#FFDE66";
        readonly 'secondary-300': "#FFD94A";
        readonly 'secondary-400': "#FFD229";
        readonly 'secondary-500': "#FBC80B";
        readonly 'secondary-600': "#E5B400";
        readonly 'secondary-700': "#C59A00";
        readonly 'secondary-800': "#A38000";
        readonly 'secondary-900': "#7A6000";
        readonly 'gray-50': "#FAFAFA";
        readonly 'gray-100': "#EDEDED";
        readonly 'gray-200': "#DDDDDD";
        readonly 'gray-300': "#BCBCBC";
        readonly 'gray-400': "#969696";
        readonly 'gray-500': "#787878";
        readonly 'gray-600': "#606060";
        readonly 'gray-700': "#484848";
        readonly 'gray-800': "#323232";
        readonly 'gray-900': "#222222";
        readonly 'success-light': "#04D361";
        readonly 'success-dark': "#1B873F";
        readonly 'danger-light': "#F75A68";
        readonly 'danger-dark': "#CC2937";
    };
    fontSizes: {
        readonly xs: "0.75rem";
        readonly sm: "0.875rem";
        readonly md: "1rem";
        readonly lg: "1.25rem";
        readonly xl: "1.5rem";
        readonly '2xl': "2rem";
        readonly '3xl': "3rem";
        readonly '4xl': "4rem";
    };
    fontWeights: {
        readonly regular: 400;
        readonly medium: 600;
        readonly bold: 700;
    };
    lineHeights: {
        readonly shorter: "120%";
        readonly short: "140%";
        readonly tall: "160%";
        readonly taller: "180%";
    };
    borderWidths: {
        readonly thin: "1px";
        readonly mid: "2px";
        readonly thick: "4px";
    };
    fonts: {
        readonly default: "DM Sans, sans-serif";
    };
    radii: {
        readonly 'rounded-xs': "4px";
        readonly 'rounded-sm': "8px";
        readonly 'rounded-md': "16px";
        readonly 'rounded-full': "999px";
    };
    space: {
        readonly 0: "0";
        readonly 1: "0.25rem";
        readonly 2: "0.5rem";
        readonly 3: "0.75rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 8: "2rem";
        readonly 10: "2.5rem";
        readonly 12: "3rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 40: "7rem";
    };
    zIndices: {
        readonly overlay: 9995;
        readonly modal: 9999;
    };
}, {
    width: "spacing";
    height: "spacing";
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    blockSize: "sizes";
    minBlockSize: "sizes";
    maxBlockSize: "sizes";
    inlineSize: "sizes";
    minInlineSize: "sizes";
    maxInlineSize: "sizes";
    minWidth: "sizes";
    maxWidth: "sizes";
    minHeight: "sizes";
    maxHeight: "sizes";
    flexBasis: "sizes";
    gridTemplateColumns: "sizes";
    gridTemplateRows: "sizes";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
declare const AvatarFallback: _stitches_react_types_styled_component.StyledComponent<react.ForwardRefExoticComponent<RadixAvatar.AvatarFallbackProps & react.RefAttributes<HTMLSpanElement>>, {}, {
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, _stitches_react_types_css_util.CSS<{
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, {
    colors: {
        readonly 'primary-50': "#DEECFF";
        readonly 'primary-100': "#BAD6FF";
        readonly 'primary-200': "#82B5FF";
        readonly 'primary-300': "#549AFF";
        readonly 'primary-400': "#217CFF";
        readonly 'primary-500': "#005CE1";
        readonly 'primary-600': "#004BB7";
        readonly 'primary-700': "#003C93";
        readonly 'primary-800': "#002F72";
        readonly 'primary-900': "#00204E";
        readonly 'secondary-50': "#FFF2C0";
        readonly 'secondary-100': "#FFE78C";
        readonly 'secondary-200': "#FFDE66";
        readonly 'secondary-300': "#FFD94A";
        readonly 'secondary-400': "#FFD229";
        readonly 'secondary-500': "#FBC80B";
        readonly 'secondary-600': "#E5B400";
        readonly 'secondary-700': "#C59A00";
        readonly 'secondary-800': "#A38000";
        readonly 'secondary-900': "#7A6000";
        readonly 'gray-50': "#FAFAFA";
        readonly 'gray-100': "#EDEDED";
        readonly 'gray-200': "#DDDDDD";
        readonly 'gray-300': "#BCBCBC";
        readonly 'gray-400': "#969696";
        readonly 'gray-500': "#787878";
        readonly 'gray-600': "#606060";
        readonly 'gray-700': "#484848";
        readonly 'gray-800': "#323232";
        readonly 'gray-900': "#222222";
        readonly 'success-light': "#04D361";
        readonly 'success-dark': "#1B873F";
        readonly 'danger-light': "#F75A68";
        readonly 'danger-dark': "#CC2937";
    };
    fontSizes: {
        readonly xs: "0.75rem";
        readonly sm: "0.875rem";
        readonly md: "1rem";
        readonly lg: "1.25rem";
        readonly xl: "1.5rem";
        readonly '2xl': "2rem";
        readonly '3xl': "3rem";
        readonly '4xl': "4rem";
    };
    fontWeights: {
        readonly regular: 400;
        readonly medium: 600;
        readonly bold: 700;
    };
    lineHeights: {
        readonly shorter: "120%";
        readonly short: "140%";
        readonly tall: "160%";
        readonly taller: "180%";
    };
    borderWidths: {
        readonly thin: "1px";
        readonly mid: "2px";
        readonly thick: "4px";
    };
    fonts: {
        readonly default: "DM Sans, sans-serif";
    };
    radii: {
        readonly 'rounded-xs': "4px";
        readonly 'rounded-sm': "8px";
        readonly 'rounded-md': "16px";
        readonly 'rounded-full': "999px";
    };
    space: {
        readonly 0: "0";
        readonly 1: "0.25rem";
        readonly 2: "0.5rem";
        readonly 3: "0.75rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 8: "2rem";
        readonly 10: "2.5rem";
        readonly 12: "3rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 40: "7rem";
    };
    zIndices: {
        readonly overlay: 9995;
        readonly modal: 9999;
    };
}, {
    width: "spacing";
    height: "spacing";
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    blockSize: "sizes";
    minBlockSize: "sizes";
    maxBlockSize: "sizes";
    inlineSize: "sizes";
    minInlineSize: "sizes";
    maxInlineSize: "sizes";
    minWidth: "sizes";
    maxWidth: "sizes";
    minHeight: "sizes";
    maxHeight: "sizes";
    flexBasis: "sizes";
    gridTemplateColumns: "sizes";
    gridTemplateRows: "sizes";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
interface AvatarProps extends ComponentProps<typeof AvatarContainer> {
    fallback: string;
    size: 'sm' | 'md' | 'xl';
}
declare function Avatar({ fallback, size, ...rest }: AvatarProps): JSX.Element;

declare const AlertContainer: _stitches_react_types_styled_component.StyledComponent<"div", {
    variant?: "danger" | "success" | "info" | "warning" | undefined;
}, {
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, _stitches_react_types_css_util.CSS<{
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, {
    colors: {
        readonly 'primary-50': "#DEECFF";
        readonly 'primary-100': "#BAD6FF";
        readonly 'primary-200': "#82B5FF";
        readonly 'primary-300': "#549AFF";
        readonly 'primary-400': "#217CFF";
        readonly 'primary-500': "#005CE1";
        readonly 'primary-600': "#004BB7";
        readonly 'primary-700': "#003C93";
        readonly 'primary-800': "#002F72";
        readonly 'primary-900': "#00204E";
        readonly 'secondary-50': "#FFF2C0";
        readonly 'secondary-100': "#FFE78C";
        readonly 'secondary-200': "#FFDE66";
        readonly 'secondary-300': "#FFD94A";
        readonly 'secondary-400': "#FFD229";
        readonly 'secondary-500': "#FBC80B";
        readonly 'secondary-600': "#E5B400";
        readonly 'secondary-700': "#C59A00";
        readonly 'secondary-800': "#A38000";
        readonly 'secondary-900': "#7A6000";
        readonly 'gray-50': "#FAFAFA";
        readonly 'gray-100': "#EDEDED";
        readonly 'gray-200': "#DDDDDD";
        readonly 'gray-300': "#BCBCBC";
        readonly 'gray-400': "#969696";
        readonly 'gray-500': "#787878";
        readonly 'gray-600': "#606060";
        readonly 'gray-700': "#484848";
        readonly 'gray-800': "#323232";
        readonly 'gray-900': "#222222";
        readonly 'success-light': "#04D361";
        readonly 'success-dark': "#1B873F";
        readonly 'danger-light': "#F75A68";
        readonly 'danger-dark': "#CC2937";
    };
    fontSizes: {
        readonly xs: "0.75rem";
        readonly sm: "0.875rem";
        readonly md: "1rem";
        readonly lg: "1.25rem";
        readonly xl: "1.5rem";
        readonly '2xl': "2rem";
        readonly '3xl': "3rem";
        readonly '4xl': "4rem";
    };
    fontWeights: {
        readonly regular: 400;
        readonly medium: 600;
        readonly bold: 700;
    };
    lineHeights: {
        readonly shorter: "120%";
        readonly short: "140%";
        readonly tall: "160%";
        readonly taller: "180%";
    };
    borderWidths: {
        readonly thin: "1px";
        readonly mid: "2px";
        readonly thick: "4px";
    };
    fonts: {
        readonly default: "DM Sans, sans-serif";
    };
    radii: {
        readonly 'rounded-xs': "4px";
        readonly 'rounded-sm': "8px";
        readonly 'rounded-md': "16px";
        readonly 'rounded-full': "999px";
    };
    space: {
        readonly 0: "0";
        readonly 1: "0.25rem";
        readonly 2: "0.5rem";
        readonly 3: "0.75rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 8: "2rem";
        readonly 10: "2.5rem";
        readonly 12: "3rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 40: "7rem";
    };
    zIndices: {
        readonly overlay: 9995;
        readonly modal: 9999;
    };
}, {
    width: "spacing";
    height: "spacing";
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    blockSize: "sizes";
    minBlockSize: "sizes";
    maxBlockSize: "sizes";
    inlineSize: "sizes";
    minInlineSize: "sizes";
    maxInlineSize: "sizes";
    minWidth: "sizes";
    maxWidth: "sizes";
    minHeight: "sizes";
    maxHeight: "sizes";
    flexBasis: "sizes";
    gridTemplateColumns: "sizes";
    gridTemplateRows: "sizes";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
declare const AlertTitleContainer: _stitches_react_types_styled_component.StyledComponent<"p", {
    variant?: "danger" | "success" | "info" | "warning" | undefined;
}, {
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, _stitches_react_types_css_util.CSS<{
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, {
    colors: {
        readonly 'primary-50': "#DEECFF";
        readonly 'primary-100': "#BAD6FF";
        readonly 'primary-200': "#82B5FF";
        readonly 'primary-300': "#549AFF";
        readonly 'primary-400': "#217CFF";
        readonly 'primary-500': "#005CE1";
        readonly 'primary-600': "#004BB7";
        readonly 'primary-700': "#003C93";
        readonly 'primary-800': "#002F72";
        readonly 'primary-900': "#00204E";
        readonly 'secondary-50': "#FFF2C0";
        readonly 'secondary-100': "#FFE78C";
        readonly 'secondary-200': "#FFDE66";
        readonly 'secondary-300': "#FFD94A";
        readonly 'secondary-400': "#FFD229";
        readonly 'secondary-500': "#FBC80B";
        readonly 'secondary-600': "#E5B400";
        readonly 'secondary-700': "#C59A00";
        readonly 'secondary-800': "#A38000";
        readonly 'secondary-900': "#7A6000";
        readonly 'gray-50': "#FAFAFA";
        readonly 'gray-100': "#EDEDED";
        readonly 'gray-200': "#DDDDDD";
        readonly 'gray-300': "#BCBCBC";
        readonly 'gray-400': "#969696";
        readonly 'gray-500': "#787878";
        readonly 'gray-600': "#606060";
        readonly 'gray-700': "#484848";
        readonly 'gray-800': "#323232";
        readonly 'gray-900': "#222222";
        readonly 'success-light': "#04D361";
        readonly 'success-dark': "#1B873F";
        readonly 'danger-light': "#F75A68";
        readonly 'danger-dark': "#CC2937";
    };
    fontSizes: {
        readonly xs: "0.75rem";
        readonly sm: "0.875rem";
        readonly md: "1rem";
        readonly lg: "1.25rem";
        readonly xl: "1.5rem";
        readonly '2xl': "2rem";
        readonly '3xl': "3rem";
        readonly '4xl': "4rem";
    };
    fontWeights: {
        readonly regular: 400;
        readonly medium: 600;
        readonly bold: 700;
    };
    lineHeights: {
        readonly shorter: "120%";
        readonly short: "140%";
        readonly tall: "160%";
        readonly taller: "180%";
    };
    borderWidths: {
        readonly thin: "1px";
        readonly mid: "2px";
        readonly thick: "4px";
    };
    fonts: {
        readonly default: "DM Sans, sans-serif";
    };
    radii: {
        readonly 'rounded-xs': "4px";
        readonly 'rounded-sm': "8px";
        readonly 'rounded-md': "16px";
        readonly 'rounded-full': "999px";
    };
    space: {
        readonly 0: "0";
        readonly 1: "0.25rem";
        readonly 2: "0.5rem";
        readonly 3: "0.75rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 8: "2rem";
        readonly 10: "2.5rem";
        readonly 12: "3rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 40: "7rem";
    };
    zIndices: {
        readonly overlay: 9995;
        readonly modal: 9999;
    };
}, {
    width: "spacing";
    height: "spacing";
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    blockSize: "sizes";
    minBlockSize: "sizes";
    maxBlockSize: "sizes";
    inlineSize: "sizes";
    minInlineSize: "sizes";
    maxInlineSize: "sizes";
    minWidth: "sizes";
    maxWidth: "sizes";
    minHeight: "sizes";
    maxHeight: "sizes";
    flexBasis: "sizes";
    gridTemplateColumns: "sizes";
    gridTemplateRows: "sizes";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
interface AlertProps extends ComponentProps<typeof AlertContainer> {
    variant: 'success' | 'danger' | 'info' | 'warning';
    children: ReactNode;
}
interface AlertTitleProps extends ComponentProps<typeof AlertTitleContainer> {
    variant: 'success' | 'danger' | 'info' | 'warning';
    children: ReactNode;
}
declare function AlertTitle({ children, variant, ...rest }: AlertTitleProps): JSX.Element;
declare function Alert({ variant, children, ...rest }: AlertProps): JSX.Element;

declare const Badge: _stitches_react_types_styled_component.StyledComponent<"span", {}, {
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, _stitches_react_types_css_util.CSS<{
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, {
    colors: {
        readonly 'primary-50': "#DEECFF";
        readonly 'primary-100': "#BAD6FF";
        readonly 'primary-200': "#82B5FF";
        readonly 'primary-300': "#549AFF";
        readonly 'primary-400': "#217CFF";
        readonly 'primary-500': "#005CE1";
        readonly 'primary-600': "#004BB7";
        readonly 'primary-700': "#003C93";
        readonly 'primary-800': "#002F72";
        readonly 'primary-900': "#00204E";
        readonly 'secondary-50': "#FFF2C0";
        readonly 'secondary-100': "#FFE78C";
        readonly 'secondary-200': "#FFDE66";
        readonly 'secondary-300': "#FFD94A";
        readonly 'secondary-400': "#FFD229";
        readonly 'secondary-500': "#FBC80B";
        readonly 'secondary-600': "#E5B400";
        readonly 'secondary-700': "#C59A00";
        readonly 'secondary-800': "#A38000";
        readonly 'secondary-900': "#7A6000";
        readonly 'gray-50': "#FAFAFA";
        readonly 'gray-100': "#EDEDED";
        readonly 'gray-200': "#DDDDDD";
        readonly 'gray-300': "#BCBCBC";
        readonly 'gray-400': "#969696";
        readonly 'gray-500': "#787878";
        readonly 'gray-600': "#606060";
        readonly 'gray-700': "#484848";
        readonly 'gray-800': "#323232";
        readonly 'gray-900': "#222222";
        readonly 'success-light': "#04D361";
        readonly 'success-dark': "#1B873F";
        readonly 'danger-light': "#F75A68";
        readonly 'danger-dark': "#CC2937";
    };
    fontSizes: {
        readonly xs: "0.75rem";
        readonly sm: "0.875rem";
        readonly md: "1rem";
        readonly lg: "1.25rem";
        readonly xl: "1.5rem";
        readonly '2xl': "2rem";
        readonly '3xl': "3rem";
        readonly '4xl': "4rem";
    };
    fontWeights: {
        readonly regular: 400;
        readonly medium: 600;
        readonly bold: 700;
    };
    lineHeights: {
        readonly shorter: "120%";
        readonly short: "140%";
        readonly tall: "160%";
        readonly taller: "180%";
    };
    borderWidths: {
        readonly thin: "1px";
        readonly mid: "2px";
        readonly thick: "4px";
    };
    fonts: {
        readonly default: "DM Sans, sans-serif";
    };
    radii: {
        readonly 'rounded-xs': "4px";
        readonly 'rounded-sm': "8px";
        readonly 'rounded-md': "16px";
        readonly 'rounded-full': "999px";
    };
    space: {
        readonly 0: "0";
        readonly 1: "0.25rem";
        readonly 2: "0.5rem";
        readonly 3: "0.75rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 8: "2rem";
        readonly 10: "2.5rem";
        readonly 12: "3rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 40: "7rem";
    };
    zIndices: {
        readonly overlay: 9995;
        readonly modal: 9999;
    };
}, {
    width: "spacing";
    height: "spacing";
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    blockSize: "sizes";
    minBlockSize: "sizes";
    maxBlockSize: "sizes";
    inlineSize: "sizes";
    minInlineSize: "sizes";
    maxInlineSize: "sizes";
    minWidth: "sizes";
    maxWidth: "sizes";
    minHeight: "sizes";
    maxHeight: "sizes";
    flexBasis: "sizes";
    gridTemplateColumns: "sizes";
    gridTemplateRows: "sizes";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
type BadgeProps = ComponentProps<typeof Badge>;

declare const ChipContainer: _stitches_react_types_styled_component.StyledComponent<"span", {}, {
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, _stitches_react_types_css_util.CSS<{
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, {
    colors: {
        readonly 'primary-50': "#DEECFF";
        readonly 'primary-100': "#BAD6FF";
        readonly 'primary-200': "#82B5FF";
        readonly 'primary-300': "#549AFF";
        readonly 'primary-400': "#217CFF";
        readonly 'primary-500': "#005CE1";
        readonly 'primary-600': "#004BB7";
        readonly 'primary-700': "#003C93";
        readonly 'primary-800': "#002F72";
        readonly 'primary-900': "#00204E";
        readonly 'secondary-50': "#FFF2C0";
        readonly 'secondary-100': "#FFE78C";
        readonly 'secondary-200': "#FFDE66";
        readonly 'secondary-300': "#FFD94A";
        readonly 'secondary-400': "#FFD229";
        readonly 'secondary-500': "#FBC80B";
        readonly 'secondary-600': "#E5B400";
        readonly 'secondary-700': "#C59A00";
        readonly 'secondary-800': "#A38000";
        readonly 'secondary-900': "#7A6000";
        readonly 'gray-50': "#FAFAFA";
        readonly 'gray-100': "#EDEDED";
        readonly 'gray-200': "#DDDDDD";
        readonly 'gray-300': "#BCBCBC";
        readonly 'gray-400': "#969696";
        readonly 'gray-500': "#787878";
        readonly 'gray-600': "#606060";
        readonly 'gray-700': "#484848";
        readonly 'gray-800': "#323232";
        readonly 'gray-900': "#222222";
        readonly 'success-light': "#04D361";
        readonly 'success-dark': "#1B873F";
        readonly 'danger-light': "#F75A68";
        readonly 'danger-dark': "#CC2937";
    };
    fontSizes: {
        readonly xs: "0.75rem";
        readonly sm: "0.875rem";
        readonly md: "1rem";
        readonly lg: "1.25rem";
        readonly xl: "1.5rem";
        readonly '2xl': "2rem";
        readonly '3xl': "3rem";
        readonly '4xl': "4rem";
    };
    fontWeights: {
        readonly regular: 400;
        readonly medium: 600;
        readonly bold: 700;
    };
    lineHeights: {
        readonly shorter: "120%";
        readonly short: "140%";
        readonly tall: "160%";
        readonly taller: "180%";
    };
    borderWidths: {
        readonly thin: "1px";
        readonly mid: "2px";
        readonly thick: "4px";
    };
    fonts: {
        readonly default: "DM Sans, sans-serif";
    };
    radii: {
        readonly 'rounded-xs': "4px";
        readonly 'rounded-sm': "8px";
        readonly 'rounded-md': "16px";
        readonly 'rounded-full': "999px";
    };
    space: {
        readonly 0: "0";
        readonly 1: "0.25rem";
        readonly 2: "0.5rem";
        readonly 3: "0.75rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 8: "2rem";
        readonly 10: "2.5rem";
        readonly 12: "3rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 40: "7rem";
    };
    zIndices: {
        readonly overlay: 9995;
        readonly modal: 9999;
    };
}, {
    width: "spacing";
    height: "spacing";
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    blockSize: "sizes";
    minBlockSize: "sizes";
    maxBlockSize: "sizes";
    inlineSize: "sizes";
    minInlineSize: "sizes";
    maxInlineSize: "sizes";
    minWidth: "sizes";
    maxWidth: "sizes";
    minHeight: "sizes";
    maxHeight: "sizes";
    flexBasis: "sizes";
    gridTemplateColumns: "sizes";
    gridTemplateRows: "sizes";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
interface ChipProps extends ComponentProps<typeof ChipContainer> {
    onDelete?: () => void;
    children: ReactNode;
}
declare function Chip({ onDelete, children, ...rest }: ChipProps): JSX.Element;

declare const StyledTable: _stitches_react_types_styled_component.StyledComponent<"table", {}, {
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, _stitches_react_types_css_util.CSS<{
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, {
    colors: {
        readonly 'primary-50': "#DEECFF";
        readonly 'primary-100': "#BAD6FF";
        readonly 'primary-200': "#82B5FF";
        readonly 'primary-300': "#549AFF";
        readonly 'primary-400': "#217CFF";
        readonly 'primary-500': "#005CE1";
        readonly 'primary-600': "#004BB7";
        readonly 'primary-700': "#003C93";
        readonly 'primary-800': "#002F72";
        readonly 'primary-900': "#00204E";
        readonly 'secondary-50': "#FFF2C0";
        readonly 'secondary-100': "#FFE78C";
        readonly 'secondary-200': "#FFDE66";
        readonly 'secondary-300': "#FFD94A";
        readonly 'secondary-400': "#FFD229";
        readonly 'secondary-500': "#FBC80B";
        readonly 'secondary-600': "#E5B400";
        readonly 'secondary-700': "#C59A00";
        readonly 'secondary-800': "#A38000";
        readonly 'secondary-900': "#7A6000";
        readonly 'gray-50': "#FAFAFA";
        readonly 'gray-100': "#EDEDED";
        readonly 'gray-200': "#DDDDDD";
        readonly 'gray-300': "#BCBCBC";
        readonly 'gray-400': "#969696";
        readonly 'gray-500': "#787878";
        readonly 'gray-600': "#606060";
        readonly 'gray-700': "#484848";
        readonly 'gray-800': "#323232";
        readonly 'gray-900': "#222222";
        readonly 'success-light': "#04D361";
        readonly 'success-dark': "#1B873F";
        readonly 'danger-light': "#F75A68";
        readonly 'danger-dark': "#CC2937";
    };
    fontSizes: {
        readonly xs: "0.75rem";
        readonly sm: "0.875rem";
        readonly md: "1rem";
        readonly lg: "1.25rem";
        readonly xl: "1.5rem";
        readonly '2xl': "2rem";
        readonly '3xl': "3rem";
        readonly '4xl': "4rem";
    };
    fontWeights: {
        readonly regular: 400;
        readonly medium: 600;
        readonly bold: 700;
    };
    lineHeights: {
        readonly shorter: "120%";
        readonly short: "140%";
        readonly tall: "160%";
        readonly taller: "180%";
    };
    borderWidths: {
        readonly thin: "1px";
        readonly mid: "2px";
        readonly thick: "4px";
    };
    fonts: {
        readonly default: "DM Sans, sans-serif";
    };
    radii: {
        readonly 'rounded-xs': "4px";
        readonly 'rounded-sm': "8px";
        readonly 'rounded-md': "16px";
        readonly 'rounded-full': "999px";
    };
    space: {
        readonly 0: "0";
        readonly 1: "0.25rem";
        readonly 2: "0.5rem";
        readonly 3: "0.75rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 8: "2rem";
        readonly 10: "2.5rem";
        readonly 12: "3rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 40: "7rem";
    };
    zIndices: {
        readonly overlay: 9995;
        readonly modal: 9999;
    };
}, {
    width: "spacing";
    height: "spacing";
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    blockSize: "sizes";
    minBlockSize: "sizes";
    maxBlockSize: "sizes";
    inlineSize: "sizes";
    minInlineSize: "sizes";
    maxInlineSize: "sizes";
    minWidth: "sizes";
    maxWidth: "sizes";
    minHeight: "sizes";
    maxHeight: "sizes";
    flexBasis: "sizes";
    gridTemplateColumns: "sizes";
    gridTemplateRows: "sizes";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
type RowType = string | number | JSX.Element;
type DataSourceType = Record<string, RowType>;
type ColumnType = {
    title: string;
    dataIndex: string;
    key: string;
    render?: (value: RowType, row?: DataSourceType) => JSX.Element;
};
interface TableProps extends ComponentProps<typeof StyledTable> {
    columns: ColumnType[];
    dataSource: DataSourceType[];
    loading?: boolean;
}
declare function Table({ columns, dataSource, loading, ...rest }: TableProps): JSX.Element;

declare const SkeletonLoading: _stitches_react_types_styled_component.StyledComponent<"div", {}, {
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, _stitches_react_types_css_util.CSS<{
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, {
    colors: {
        readonly 'primary-50': "#DEECFF";
        readonly 'primary-100': "#BAD6FF";
        readonly 'primary-200': "#82B5FF";
        readonly 'primary-300': "#549AFF";
        readonly 'primary-400': "#217CFF";
        readonly 'primary-500': "#005CE1";
        readonly 'primary-600': "#004BB7";
        readonly 'primary-700': "#003C93";
        readonly 'primary-800': "#002F72";
        readonly 'primary-900': "#00204E";
        readonly 'secondary-50': "#FFF2C0";
        readonly 'secondary-100': "#FFE78C";
        readonly 'secondary-200': "#FFDE66";
        readonly 'secondary-300': "#FFD94A";
        readonly 'secondary-400': "#FFD229";
        readonly 'secondary-500': "#FBC80B";
        readonly 'secondary-600': "#E5B400";
        readonly 'secondary-700': "#C59A00";
        readonly 'secondary-800': "#A38000";
        readonly 'secondary-900': "#7A6000";
        readonly 'gray-50': "#FAFAFA";
        readonly 'gray-100': "#EDEDED";
        readonly 'gray-200': "#DDDDDD";
        readonly 'gray-300': "#BCBCBC";
        readonly 'gray-400': "#969696";
        readonly 'gray-500': "#787878";
        readonly 'gray-600': "#606060";
        readonly 'gray-700': "#484848";
        readonly 'gray-800': "#323232";
        readonly 'gray-900': "#222222";
        readonly 'success-light': "#04D361";
        readonly 'success-dark': "#1B873F";
        readonly 'danger-light': "#F75A68";
        readonly 'danger-dark': "#CC2937";
    };
    fontSizes: {
        readonly xs: "0.75rem";
        readonly sm: "0.875rem";
        readonly md: "1rem";
        readonly lg: "1.25rem";
        readonly xl: "1.5rem";
        readonly '2xl': "2rem";
        readonly '3xl': "3rem";
        readonly '4xl': "4rem";
    };
    fontWeights: {
        readonly regular: 400;
        readonly medium: 600;
        readonly bold: 700;
    };
    lineHeights: {
        readonly shorter: "120%";
        readonly short: "140%";
        readonly tall: "160%";
        readonly taller: "180%";
    };
    borderWidths: {
        readonly thin: "1px";
        readonly mid: "2px";
        readonly thick: "4px";
    };
    fonts: {
        readonly default: "DM Sans, sans-serif";
    };
    radii: {
        readonly 'rounded-xs': "4px";
        readonly 'rounded-sm': "8px";
        readonly 'rounded-md': "16px";
        readonly 'rounded-full': "999px";
    };
    space: {
        readonly 0: "0";
        readonly 1: "0.25rem";
        readonly 2: "0.5rem";
        readonly 3: "0.75rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 8: "2rem";
        readonly 10: "2.5rem";
        readonly 12: "3rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 40: "7rem";
    };
    zIndices: {
        readonly overlay: 9995;
        readonly modal: 9999;
    };
}, {
    width: "spacing";
    height: "spacing";
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    blockSize: "sizes";
    minBlockSize: "sizes";
    maxBlockSize: "sizes";
    inlineSize: "sizes";
    minInlineSize: "sizes";
    maxInlineSize: "sizes";
    minWidth: "sizes";
    maxWidth: "sizes";
    minHeight: "sizes";
    maxHeight: "sizes";
    flexBasis: "sizes";
    gridTemplateColumns: "sizes";
    gridTemplateRows: "sizes";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
interface SkeletonProps extends ComponentProps<typeof SkeletonLoading> {
    width: number | string;
    height: number | string;
    radius?: number | string;
    count?: number;
}
declare function Skeleton({ width, height, radius, count }: SkeletonProps): JSX.Element;

declare const StyledBreadcrumb: _stitches_react_types_styled_component.StyledComponent<"nav", {}, {
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, _stitches_react_types_css_util.CSS<{
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, {
    colors: {
        readonly 'primary-50': "#DEECFF";
        readonly 'primary-100': "#BAD6FF";
        readonly 'primary-200': "#82B5FF";
        readonly 'primary-300': "#549AFF";
        readonly 'primary-400': "#217CFF";
        readonly 'primary-500': "#005CE1";
        readonly 'primary-600': "#004BB7";
        readonly 'primary-700': "#003C93";
        readonly 'primary-800': "#002F72";
        readonly 'primary-900': "#00204E";
        readonly 'secondary-50': "#FFF2C0";
        readonly 'secondary-100': "#FFE78C";
        readonly 'secondary-200': "#FFDE66";
        readonly 'secondary-300': "#FFD94A";
        readonly 'secondary-400': "#FFD229";
        readonly 'secondary-500': "#FBC80B";
        readonly 'secondary-600': "#E5B400";
        readonly 'secondary-700': "#C59A00";
        readonly 'secondary-800': "#A38000";
        readonly 'secondary-900': "#7A6000";
        readonly 'gray-50': "#FAFAFA";
        readonly 'gray-100': "#EDEDED";
        readonly 'gray-200': "#DDDDDD";
        readonly 'gray-300': "#BCBCBC";
        readonly 'gray-400': "#969696";
        readonly 'gray-500': "#787878";
        readonly 'gray-600': "#606060";
        readonly 'gray-700': "#484848";
        readonly 'gray-800': "#323232";
        readonly 'gray-900': "#222222";
        readonly 'success-light': "#04D361";
        readonly 'success-dark': "#1B873F";
        readonly 'danger-light': "#F75A68";
        readonly 'danger-dark': "#CC2937";
    };
    fontSizes: {
        readonly xs: "0.75rem";
        readonly sm: "0.875rem";
        readonly md: "1rem";
        readonly lg: "1.25rem";
        readonly xl: "1.5rem";
        readonly '2xl': "2rem";
        readonly '3xl': "3rem";
        readonly '4xl': "4rem";
    };
    fontWeights: {
        readonly regular: 400;
        readonly medium: 600;
        readonly bold: 700;
    };
    lineHeights: {
        readonly shorter: "120%";
        readonly short: "140%";
        readonly tall: "160%";
        readonly taller: "180%";
    };
    borderWidths: {
        readonly thin: "1px";
        readonly mid: "2px";
        readonly thick: "4px";
    };
    fonts: {
        readonly default: "DM Sans, sans-serif";
    };
    radii: {
        readonly 'rounded-xs': "4px";
        readonly 'rounded-sm': "8px";
        readonly 'rounded-md': "16px";
        readonly 'rounded-full': "999px";
    };
    space: {
        readonly 0: "0";
        readonly 1: "0.25rem";
        readonly 2: "0.5rem";
        readonly 3: "0.75rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 8: "2rem";
        readonly 10: "2.5rem";
        readonly 12: "3rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 40: "7rem";
    };
    zIndices: {
        readonly overlay: 9995;
        readonly modal: 9999;
    };
}, {
    width: "spacing";
    height: "spacing";
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    blockSize: "sizes";
    minBlockSize: "sizes";
    maxBlockSize: "sizes";
    inlineSize: "sizes";
    minInlineSize: "sizes";
    maxInlineSize: "sizes";
    minWidth: "sizes";
    maxWidth: "sizes";
    minHeight: "sizes";
    maxHeight: "sizes";
    flexBasis: "sizes";
    gridTemplateColumns: "sizes";
    gridTemplateRows: "sizes";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
declare const StyledBreadcrumbItem: _stitches_react_types_styled_component.StyledComponent<"li", {
    isActivePage?: boolean | "true" | undefined;
}, {
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, _stitches_react_types_css_util.CSS<{
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, {
    colors: {
        readonly 'primary-50': "#DEECFF";
        readonly 'primary-100': "#BAD6FF";
        readonly 'primary-200': "#82B5FF";
        readonly 'primary-300': "#549AFF";
        readonly 'primary-400': "#217CFF";
        readonly 'primary-500': "#005CE1";
        readonly 'primary-600': "#004BB7";
        readonly 'primary-700': "#003C93";
        readonly 'primary-800': "#002F72";
        readonly 'primary-900': "#00204E";
        readonly 'secondary-50': "#FFF2C0";
        readonly 'secondary-100': "#FFE78C";
        readonly 'secondary-200': "#FFDE66";
        readonly 'secondary-300': "#FFD94A";
        readonly 'secondary-400': "#FFD229";
        readonly 'secondary-500': "#FBC80B";
        readonly 'secondary-600': "#E5B400";
        readonly 'secondary-700': "#C59A00";
        readonly 'secondary-800': "#A38000";
        readonly 'secondary-900': "#7A6000";
        readonly 'gray-50': "#FAFAFA";
        readonly 'gray-100': "#EDEDED";
        readonly 'gray-200': "#DDDDDD";
        readonly 'gray-300': "#BCBCBC";
        readonly 'gray-400': "#969696";
        readonly 'gray-500': "#787878";
        readonly 'gray-600': "#606060";
        readonly 'gray-700': "#484848";
        readonly 'gray-800': "#323232";
        readonly 'gray-900': "#222222";
        readonly 'success-light': "#04D361";
        readonly 'success-dark': "#1B873F";
        readonly 'danger-light': "#F75A68";
        readonly 'danger-dark': "#CC2937";
    };
    fontSizes: {
        readonly xs: "0.75rem";
        readonly sm: "0.875rem";
        readonly md: "1rem";
        readonly lg: "1.25rem";
        readonly xl: "1.5rem";
        readonly '2xl': "2rem";
        readonly '3xl': "3rem";
        readonly '4xl': "4rem";
    };
    fontWeights: {
        readonly regular: 400;
        readonly medium: 600;
        readonly bold: 700;
    };
    lineHeights: {
        readonly shorter: "120%";
        readonly short: "140%";
        readonly tall: "160%";
        readonly taller: "180%";
    };
    borderWidths: {
        readonly thin: "1px";
        readonly mid: "2px";
        readonly thick: "4px";
    };
    fonts: {
        readonly default: "DM Sans, sans-serif";
    };
    radii: {
        readonly 'rounded-xs': "4px";
        readonly 'rounded-sm': "8px";
        readonly 'rounded-md': "16px";
        readonly 'rounded-full': "999px";
    };
    space: {
        readonly 0: "0";
        readonly 1: "0.25rem";
        readonly 2: "0.5rem";
        readonly 3: "0.75rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 8: "2rem";
        readonly 10: "2.5rem";
        readonly 12: "3rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 40: "7rem";
    };
    zIndices: {
        readonly overlay: 9995;
        readonly modal: 9999;
    };
}, {
    width: "spacing";
    height: "spacing";
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    blockSize: "sizes";
    minBlockSize: "sizes";
    maxBlockSize: "sizes";
    inlineSize: "sizes";
    minInlineSize: "sizes";
    maxInlineSize: "sizes";
    minWidth: "sizes";
    maxWidth: "sizes";
    minHeight: "sizes";
    maxHeight: "sizes";
    flexBasis: "sizes";
    gridTemplateColumns: "sizes";
    gridTemplateRows: "sizes";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
interface BreadcrumbProps extends ComponentProps<typeof StyledBreadcrumb> {
    children: ReactNode;
}
interface BreadcrumbItemProps {
    children: ReactNode;
    isActivePage?: boolean;
    to: string;
}
declare function BreadcrumbItem({ children, isActivePage, to, }: BreadcrumbItemProps): JSX.Element;
declare function Breadcrumb(props: BreadcrumbProps): JSX.Element;

declare const MultistepContainer: _stitches_react_types_styled_component.StyledComponent<"div", {}, {
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, _stitches_react_types_css_util.CSS<{
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, {
    colors: {
        readonly 'primary-50': "#DEECFF";
        readonly 'primary-100': "#BAD6FF";
        readonly 'primary-200': "#82B5FF";
        readonly 'primary-300': "#549AFF";
        readonly 'primary-400': "#217CFF";
        readonly 'primary-500': "#005CE1";
        readonly 'primary-600': "#004BB7";
        readonly 'primary-700': "#003C93";
        readonly 'primary-800': "#002F72";
        readonly 'primary-900': "#00204E";
        readonly 'secondary-50': "#FFF2C0";
        readonly 'secondary-100': "#FFE78C";
        readonly 'secondary-200': "#FFDE66";
        readonly 'secondary-300': "#FFD94A";
        readonly 'secondary-400': "#FFD229";
        readonly 'secondary-500': "#FBC80B";
        readonly 'secondary-600': "#E5B400";
        readonly 'secondary-700': "#C59A00";
        readonly 'secondary-800': "#A38000";
        readonly 'secondary-900': "#7A6000";
        readonly 'gray-50': "#FAFAFA";
        readonly 'gray-100': "#EDEDED";
        readonly 'gray-200': "#DDDDDD";
        readonly 'gray-300': "#BCBCBC";
        readonly 'gray-400': "#969696";
        readonly 'gray-500': "#787878";
        readonly 'gray-600': "#606060";
        readonly 'gray-700': "#484848";
        readonly 'gray-800': "#323232";
        readonly 'gray-900': "#222222";
        readonly 'success-light': "#04D361";
        readonly 'success-dark': "#1B873F";
        readonly 'danger-light': "#F75A68";
        readonly 'danger-dark': "#CC2937";
    };
    fontSizes: {
        readonly xs: "0.75rem";
        readonly sm: "0.875rem";
        readonly md: "1rem";
        readonly lg: "1.25rem";
        readonly xl: "1.5rem";
        readonly '2xl': "2rem";
        readonly '3xl': "3rem";
        readonly '4xl': "4rem";
    };
    fontWeights: {
        readonly regular: 400;
        readonly medium: 600;
        readonly bold: 700;
    };
    lineHeights: {
        readonly shorter: "120%";
        readonly short: "140%";
        readonly tall: "160%";
        readonly taller: "180%";
    };
    borderWidths: {
        readonly thin: "1px";
        readonly mid: "2px";
        readonly thick: "4px";
    };
    fonts: {
        readonly default: "DM Sans, sans-serif";
    };
    radii: {
        readonly 'rounded-xs': "4px";
        readonly 'rounded-sm': "8px";
        readonly 'rounded-md': "16px";
        readonly 'rounded-full': "999px";
    };
    space: {
        readonly 0: "0";
        readonly 1: "0.25rem";
        readonly 2: "0.5rem";
        readonly 3: "0.75rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 8: "2rem";
        readonly 10: "2.5rem";
        readonly 12: "3rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 40: "7rem";
    };
    zIndices: {
        readonly overlay: 9995;
        readonly modal: 9999;
    };
}, {
    width: "spacing";
    height: "spacing";
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    blockSize: "sizes";
    minBlockSize: "sizes";
    maxBlockSize: "sizes";
    inlineSize: "sizes";
    minInlineSize: "sizes";
    maxInlineSize: "sizes";
    minWidth: "sizes";
    maxWidth: "sizes";
    minHeight: "sizes";
    maxHeight: "sizes";
    flexBasis: "sizes";
    gridTemplateColumns: "sizes";
    gridTemplateRows: "sizes";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
interface MultistepProps extends ComponentProps<typeof MultistepContainer> {
    size: number;
    currentStep: number;
    label: string;
}
declare function Multistep({ size, label, currentStep, ...rest }: MultistepProps): JSX.Element;

declare const Heading: _stitches_react_types_styled_component.StyledComponent<"h2", {
    size?: "xs" | "sm" | "md" | "lg" | "xl" | "2xl" | "3xl" | "4xl" | undefined;
}, {
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, _stitches_react_types_css_util.CSS<{
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, {
    colors: {
        readonly 'primary-50': "#DEECFF";
        readonly 'primary-100': "#BAD6FF";
        readonly 'primary-200': "#82B5FF";
        readonly 'primary-300': "#549AFF";
        readonly 'primary-400': "#217CFF";
        readonly 'primary-500': "#005CE1";
        readonly 'primary-600': "#004BB7";
        readonly 'primary-700': "#003C93";
        readonly 'primary-800': "#002F72";
        readonly 'primary-900': "#00204E";
        readonly 'secondary-50': "#FFF2C0";
        readonly 'secondary-100': "#FFE78C";
        readonly 'secondary-200': "#FFDE66";
        readonly 'secondary-300': "#FFD94A";
        readonly 'secondary-400': "#FFD229";
        readonly 'secondary-500': "#FBC80B";
        readonly 'secondary-600': "#E5B400";
        readonly 'secondary-700': "#C59A00";
        readonly 'secondary-800': "#A38000";
        readonly 'secondary-900': "#7A6000";
        readonly 'gray-50': "#FAFAFA";
        readonly 'gray-100': "#EDEDED";
        readonly 'gray-200': "#DDDDDD";
        readonly 'gray-300': "#BCBCBC";
        readonly 'gray-400': "#969696";
        readonly 'gray-500': "#787878";
        readonly 'gray-600': "#606060";
        readonly 'gray-700': "#484848";
        readonly 'gray-800': "#323232";
        readonly 'gray-900': "#222222";
        readonly 'success-light': "#04D361";
        readonly 'success-dark': "#1B873F";
        readonly 'danger-light': "#F75A68";
        readonly 'danger-dark': "#CC2937";
    };
    fontSizes: {
        readonly xs: "0.75rem";
        readonly sm: "0.875rem";
        readonly md: "1rem";
        readonly lg: "1.25rem";
        readonly xl: "1.5rem";
        readonly '2xl': "2rem";
        readonly '3xl': "3rem";
        readonly '4xl': "4rem";
    };
    fontWeights: {
        readonly regular: 400;
        readonly medium: 600;
        readonly bold: 700;
    };
    lineHeights: {
        readonly shorter: "120%";
        readonly short: "140%";
        readonly tall: "160%";
        readonly taller: "180%";
    };
    borderWidths: {
        readonly thin: "1px";
        readonly mid: "2px";
        readonly thick: "4px";
    };
    fonts: {
        readonly default: "DM Sans, sans-serif";
    };
    radii: {
        readonly 'rounded-xs': "4px";
        readonly 'rounded-sm': "8px";
        readonly 'rounded-md': "16px";
        readonly 'rounded-full': "999px";
    };
    space: {
        readonly 0: "0";
        readonly 1: "0.25rem";
        readonly 2: "0.5rem";
        readonly 3: "0.75rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 8: "2rem";
        readonly 10: "2.5rem";
        readonly 12: "3rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 40: "7rem";
    };
    zIndices: {
        readonly overlay: 9995;
        readonly modal: 9999;
    };
}, {
    width: "spacing";
    height: "spacing";
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    blockSize: "sizes";
    minBlockSize: "sizes";
    maxBlockSize: "sizes";
    inlineSize: "sizes";
    minInlineSize: "sizes";
    maxInlineSize: "sizes";
    minWidth: "sizes";
    maxWidth: "sizes";
    minHeight: "sizes";
    maxHeight: "sizes";
    flexBasis: "sizes";
    gridTemplateColumns: "sizes";
    gridTemplateRows: "sizes";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
interface HeadingProps extends ComponentProps<typeof Heading> {
    as?: ElementType;
}

declare const Text: _stitches_react_types_styled_component.StyledComponent<"p", {
    size?: "xs" | "sm" | "md" | "lg" | "xl" | "2xl" | "3xl" | "4xl" | undefined;
}, {
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, _stitches_react_types_css_util.CSS<{
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, {
    colors: {
        readonly 'primary-50': "#DEECFF";
        readonly 'primary-100': "#BAD6FF";
        readonly 'primary-200': "#82B5FF";
        readonly 'primary-300': "#549AFF";
        readonly 'primary-400': "#217CFF";
        readonly 'primary-500': "#005CE1";
        readonly 'primary-600': "#004BB7";
        readonly 'primary-700': "#003C93";
        readonly 'primary-800': "#002F72";
        readonly 'primary-900': "#00204E";
        readonly 'secondary-50': "#FFF2C0";
        readonly 'secondary-100': "#FFE78C";
        readonly 'secondary-200': "#FFDE66";
        readonly 'secondary-300': "#FFD94A";
        readonly 'secondary-400': "#FFD229";
        readonly 'secondary-500': "#FBC80B";
        readonly 'secondary-600': "#E5B400";
        readonly 'secondary-700': "#C59A00";
        readonly 'secondary-800': "#A38000";
        readonly 'secondary-900': "#7A6000";
        readonly 'gray-50': "#FAFAFA";
        readonly 'gray-100': "#EDEDED";
        readonly 'gray-200': "#DDDDDD";
        readonly 'gray-300': "#BCBCBC";
        readonly 'gray-400': "#969696";
        readonly 'gray-500': "#787878";
        readonly 'gray-600': "#606060";
        readonly 'gray-700': "#484848";
        readonly 'gray-800': "#323232";
        readonly 'gray-900': "#222222";
        readonly 'success-light': "#04D361";
        readonly 'success-dark': "#1B873F";
        readonly 'danger-light': "#F75A68";
        readonly 'danger-dark': "#CC2937";
    };
    fontSizes: {
        readonly xs: "0.75rem";
        readonly sm: "0.875rem";
        readonly md: "1rem";
        readonly lg: "1.25rem";
        readonly xl: "1.5rem";
        readonly '2xl': "2rem";
        readonly '3xl': "3rem";
        readonly '4xl': "4rem";
    };
    fontWeights: {
        readonly regular: 400;
        readonly medium: 600;
        readonly bold: 700;
    };
    lineHeights: {
        readonly shorter: "120%";
        readonly short: "140%";
        readonly tall: "160%";
        readonly taller: "180%";
    };
    borderWidths: {
        readonly thin: "1px";
        readonly mid: "2px";
        readonly thick: "4px";
    };
    fonts: {
        readonly default: "DM Sans, sans-serif";
    };
    radii: {
        readonly 'rounded-xs': "4px";
        readonly 'rounded-sm': "8px";
        readonly 'rounded-md': "16px";
        readonly 'rounded-full': "999px";
    };
    space: {
        readonly 0: "0";
        readonly 1: "0.25rem";
        readonly 2: "0.5rem";
        readonly 3: "0.75rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 8: "2rem";
        readonly 10: "2.5rem";
        readonly 12: "3rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 40: "7rem";
    };
    zIndices: {
        readonly overlay: 9995;
        readonly modal: 9999;
    };
}, {
    width: "spacing";
    height: "spacing";
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    blockSize: "sizes";
    minBlockSize: "sizes";
    maxBlockSize: "sizes";
    inlineSize: "sizes";
    minInlineSize: "sizes";
    maxInlineSize: "sizes";
    minWidth: "sizes";
    maxWidth: "sizes";
    minHeight: "sizes";
    maxHeight: "sizes";
    flexBasis: "sizes";
    gridTemplateColumns: "sizes";
    gridTemplateRows: "sizes";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
interface TextProps extends ComponentProps<typeof Text> {
    as?: ElementType;
}

declare const StyledContent$2: _stitches_react_types_styled_component.StyledComponent<react.ForwardRefExoticComponent<DropdownMenu.DropdownMenuContentProps & react.RefAttributes<HTMLDivElement>>, {}, {
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, _stitches_react_types_css_util.CSS<{
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, {
    colors: {
        readonly 'primary-50': "#DEECFF";
        readonly 'primary-100': "#BAD6FF";
        readonly 'primary-200': "#82B5FF";
        readonly 'primary-300': "#549AFF";
        readonly 'primary-400': "#217CFF";
        readonly 'primary-500': "#005CE1";
        readonly 'primary-600': "#004BB7";
        readonly 'primary-700': "#003C93";
        readonly 'primary-800': "#002F72";
        readonly 'primary-900': "#00204E";
        readonly 'secondary-50': "#FFF2C0";
        readonly 'secondary-100': "#FFE78C";
        readonly 'secondary-200': "#FFDE66";
        readonly 'secondary-300': "#FFD94A";
        readonly 'secondary-400': "#FFD229";
        readonly 'secondary-500': "#FBC80B";
        readonly 'secondary-600': "#E5B400";
        readonly 'secondary-700': "#C59A00";
        readonly 'secondary-800': "#A38000";
        readonly 'secondary-900': "#7A6000";
        readonly 'gray-50': "#FAFAFA";
        readonly 'gray-100': "#EDEDED";
        readonly 'gray-200': "#DDDDDD";
        readonly 'gray-300': "#BCBCBC";
        readonly 'gray-400': "#969696";
        readonly 'gray-500': "#787878";
        readonly 'gray-600': "#606060";
        readonly 'gray-700': "#484848";
        readonly 'gray-800': "#323232";
        readonly 'gray-900': "#222222";
        readonly 'success-light': "#04D361";
        readonly 'success-dark': "#1B873F";
        readonly 'danger-light': "#F75A68";
        readonly 'danger-dark': "#CC2937";
    };
    fontSizes: {
        readonly xs: "0.75rem";
        readonly sm: "0.875rem";
        readonly md: "1rem";
        readonly lg: "1.25rem";
        readonly xl: "1.5rem";
        readonly '2xl': "2rem";
        readonly '3xl': "3rem";
        readonly '4xl': "4rem";
    };
    fontWeights: {
        readonly regular: 400;
        readonly medium: 600;
        readonly bold: 700;
    };
    lineHeights: {
        readonly shorter: "120%";
        readonly short: "140%";
        readonly tall: "160%";
        readonly taller: "180%";
    };
    borderWidths: {
        readonly thin: "1px";
        readonly mid: "2px";
        readonly thick: "4px";
    };
    fonts: {
        readonly default: "DM Sans, sans-serif";
    };
    radii: {
        readonly 'rounded-xs': "4px";
        readonly 'rounded-sm': "8px";
        readonly 'rounded-md': "16px";
        readonly 'rounded-full': "999px";
    };
    space: {
        readonly 0: "0";
        readonly 1: "0.25rem";
        readonly 2: "0.5rem";
        readonly 3: "0.75rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 8: "2rem";
        readonly 10: "2.5rem";
        readonly 12: "3rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 40: "7rem";
    };
    zIndices: {
        readonly overlay: 9995;
        readonly modal: 9999;
    };
}, {
    width: "spacing";
    height: "spacing";
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    blockSize: "sizes";
    minBlockSize: "sizes";
    maxBlockSize: "sizes";
    inlineSize: "sizes";
    minInlineSize: "sizes";
    maxInlineSize: "sizes";
    minWidth: "sizes";
    maxWidth: "sizes";
    minHeight: "sizes";
    maxHeight: "sizes";
    flexBasis: "sizes";
    gridTemplateColumns: "sizes";
    gridTemplateRows: "sizes";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
type DropdownContentProps = ComponentProps<typeof StyledContent$2>;
declare function DropdownContent(props: DropdownContentProps): JSX.Element;

declare const StyledDivider: _stitches_react_types_styled_component.StyledComponent<react.ForwardRefExoticComponent<DropdownMenu.DropdownMenuSeparatorProps & react.RefAttributes<HTMLDivElement>>, {}, {
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, _stitches_react_types_css_util.CSS<{
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, {
    colors: {
        readonly 'primary-50': "#DEECFF";
        readonly 'primary-100': "#BAD6FF";
        readonly 'primary-200': "#82B5FF";
        readonly 'primary-300': "#549AFF";
        readonly 'primary-400': "#217CFF";
        readonly 'primary-500': "#005CE1";
        readonly 'primary-600': "#004BB7";
        readonly 'primary-700': "#003C93";
        readonly 'primary-800': "#002F72";
        readonly 'primary-900': "#00204E";
        readonly 'secondary-50': "#FFF2C0";
        readonly 'secondary-100': "#FFE78C";
        readonly 'secondary-200': "#FFDE66";
        readonly 'secondary-300': "#FFD94A";
        readonly 'secondary-400': "#FFD229";
        readonly 'secondary-500': "#FBC80B";
        readonly 'secondary-600': "#E5B400";
        readonly 'secondary-700': "#C59A00";
        readonly 'secondary-800': "#A38000";
        readonly 'secondary-900': "#7A6000";
        readonly 'gray-50': "#FAFAFA";
        readonly 'gray-100': "#EDEDED";
        readonly 'gray-200': "#DDDDDD";
        readonly 'gray-300': "#BCBCBC";
        readonly 'gray-400': "#969696";
        readonly 'gray-500': "#787878";
        readonly 'gray-600': "#606060";
        readonly 'gray-700': "#484848";
        readonly 'gray-800': "#323232";
        readonly 'gray-900': "#222222";
        readonly 'success-light': "#04D361";
        readonly 'success-dark': "#1B873F";
        readonly 'danger-light': "#F75A68";
        readonly 'danger-dark': "#CC2937";
    };
    fontSizes: {
        readonly xs: "0.75rem";
        readonly sm: "0.875rem";
        readonly md: "1rem";
        readonly lg: "1.25rem";
        readonly xl: "1.5rem";
        readonly '2xl': "2rem";
        readonly '3xl': "3rem";
        readonly '4xl': "4rem";
    };
    fontWeights: {
        readonly regular: 400;
        readonly medium: 600;
        readonly bold: 700;
    };
    lineHeights: {
        readonly shorter: "120%";
        readonly short: "140%";
        readonly tall: "160%";
        readonly taller: "180%";
    };
    borderWidths: {
        readonly thin: "1px";
        readonly mid: "2px";
        readonly thick: "4px";
    };
    fonts: {
        readonly default: "DM Sans, sans-serif";
    };
    radii: {
        readonly 'rounded-xs': "4px";
        readonly 'rounded-sm': "8px";
        readonly 'rounded-md': "16px";
        readonly 'rounded-full': "999px";
    };
    space: {
        readonly 0: "0";
        readonly 1: "0.25rem";
        readonly 2: "0.5rem";
        readonly 3: "0.75rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 8: "2rem";
        readonly 10: "2.5rem";
        readonly 12: "3rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 40: "7rem";
    };
    zIndices: {
        readonly overlay: 9995;
        readonly modal: 9999;
    };
}, {
    width: "spacing";
    height: "spacing";
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    blockSize: "sizes";
    minBlockSize: "sizes";
    maxBlockSize: "sizes";
    inlineSize: "sizes";
    minInlineSize: "sizes";
    maxInlineSize: "sizes";
    minWidth: "sizes";
    maxWidth: "sizes";
    minHeight: "sizes";
    maxHeight: "sizes";
    flexBasis: "sizes";
    gridTemplateColumns: "sizes";
    gridTemplateRows: "sizes";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
type DropdownDividerProps = ComponentProps<typeof StyledDivider>;
declare function DropdownDivider(props: DropdownDividerProps): JSX.Element;

declare const StyledItem: _stitches_react_types_styled_component.StyledComponent<react.ForwardRefExoticComponent<DropdownMenu.DropdownMenuItemProps & react.RefAttributes<HTMLDivElement>>, {}, {
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, _stitches_react_types_css_util.CSS<{
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, {
    colors: {
        readonly 'primary-50': "#DEECFF";
        readonly 'primary-100': "#BAD6FF";
        readonly 'primary-200': "#82B5FF";
        readonly 'primary-300': "#549AFF";
        readonly 'primary-400': "#217CFF";
        readonly 'primary-500': "#005CE1";
        readonly 'primary-600': "#004BB7";
        readonly 'primary-700': "#003C93";
        readonly 'primary-800': "#002F72";
        readonly 'primary-900': "#00204E";
        readonly 'secondary-50': "#FFF2C0";
        readonly 'secondary-100': "#FFE78C";
        readonly 'secondary-200': "#FFDE66";
        readonly 'secondary-300': "#FFD94A";
        readonly 'secondary-400': "#FFD229";
        readonly 'secondary-500': "#FBC80B";
        readonly 'secondary-600': "#E5B400";
        readonly 'secondary-700': "#C59A00";
        readonly 'secondary-800': "#A38000";
        readonly 'secondary-900': "#7A6000";
        readonly 'gray-50': "#FAFAFA";
        readonly 'gray-100': "#EDEDED";
        readonly 'gray-200': "#DDDDDD";
        readonly 'gray-300': "#BCBCBC";
        readonly 'gray-400': "#969696";
        readonly 'gray-500': "#787878";
        readonly 'gray-600': "#606060";
        readonly 'gray-700': "#484848";
        readonly 'gray-800': "#323232";
        readonly 'gray-900': "#222222";
        readonly 'success-light': "#04D361";
        readonly 'success-dark': "#1B873F";
        readonly 'danger-light': "#F75A68";
        readonly 'danger-dark': "#CC2937";
    };
    fontSizes: {
        readonly xs: "0.75rem";
        readonly sm: "0.875rem";
        readonly md: "1rem";
        readonly lg: "1.25rem";
        readonly xl: "1.5rem";
        readonly '2xl': "2rem";
        readonly '3xl': "3rem";
        readonly '4xl': "4rem";
    };
    fontWeights: {
        readonly regular: 400;
        readonly medium: 600;
        readonly bold: 700;
    };
    lineHeights: {
        readonly shorter: "120%";
        readonly short: "140%";
        readonly tall: "160%";
        readonly taller: "180%";
    };
    borderWidths: {
        readonly thin: "1px";
        readonly mid: "2px";
        readonly thick: "4px";
    };
    fonts: {
        readonly default: "DM Sans, sans-serif";
    };
    radii: {
        readonly 'rounded-xs': "4px";
        readonly 'rounded-sm': "8px";
        readonly 'rounded-md': "16px";
        readonly 'rounded-full': "999px";
    };
    space: {
        readonly 0: "0";
        readonly 1: "0.25rem";
        readonly 2: "0.5rem";
        readonly 3: "0.75rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 8: "2rem";
        readonly 10: "2.5rem";
        readonly 12: "3rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 40: "7rem";
    };
    zIndices: {
        readonly overlay: 9995;
        readonly modal: 9999;
    };
}, {
    width: "spacing";
    height: "spacing";
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    blockSize: "sizes";
    minBlockSize: "sizes";
    maxBlockSize: "sizes";
    inlineSize: "sizes";
    minInlineSize: "sizes";
    maxInlineSize: "sizes";
    minWidth: "sizes";
    maxWidth: "sizes";
    minHeight: "sizes";
    maxHeight: "sizes";
    flexBasis: "sizes";
    gridTemplateColumns: "sizes";
    gridTemplateRows: "sizes";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
type DropdownItemProps = ComponentProps<typeof StyledItem>;
declare function DropdownItem(props: DropdownItemProps): JSX.Element;

declare const StyledTrigger$1: _stitches_react_types_styled_component.StyledComponent<react.ForwardRefExoticComponent<DropdownMenu.DropdownMenuTriggerProps & react.RefAttributes<HTMLButtonElement>>, {}, {
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, _stitches_react_types_css_util.CSS<{
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, {
    colors: {
        readonly 'primary-50': "#DEECFF";
        readonly 'primary-100': "#BAD6FF";
        readonly 'primary-200': "#82B5FF";
        readonly 'primary-300': "#549AFF";
        readonly 'primary-400': "#217CFF";
        readonly 'primary-500': "#005CE1";
        readonly 'primary-600': "#004BB7";
        readonly 'primary-700': "#003C93";
        readonly 'primary-800': "#002F72";
        readonly 'primary-900': "#00204E";
        readonly 'secondary-50': "#FFF2C0";
        readonly 'secondary-100': "#FFE78C";
        readonly 'secondary-200': "#FFDE66";
        readonly 'secondary-300': "#FFD94A";
        readonly 'secondary-400': "#FFD229";
        readonly 'secondary-500': "#FBC80B";
        readonly 'secondary-600': "#E5B400";
        readonly 'secondary-700': "#C59A00";
        readonly 'secondary-800': "#A38000";
        readonly 'secondary-900': "#7A6000";
        readonly 'gray-50': "#FAFAFA";
        readonly 'gray-100': "#EDEDED";
        readonly 'gray-200': "#DDDDDD";
        readonly 'gray-300': "#BCBCBC";
        readonly 'gray-400': "#969696";
        readonly 'gray-500': "#787878";
        readonly 'gray-600': "#606060";
        readonly 'gray-700': "#484848";
        readonly 'gray-800': "#323232";
        readonly 'gray-900': "#222222";
        readonly 'success-light': "#04D361";
        readonly 'success-dark': "#1B873F";
        readonly 'danger-light': "#F75A68";
        readonly 'danger-dark': "#CC2937";
    };
    fontSizes: {
        readonly xs: "0.75rem";
        readonly sm: "0.875rem";
        readonly md: "1rem";
        readonly lg: "1.25rem";
        readonly xl: "1.5rem";
        readonly '2xl': "2rem";
        readonly '3xl': "3rem";
        readonly '4xl': "4rem";
    };
    fontWeights: {
        readonly regular: 400;
        readonly medium: 600;
        readonly bold: 700;
    };
    lineHeights: {
        readonly shorter: "120%";
        readonly short: "140%";
        readonly tall: "160%";
        readonly taller: "180%";
    };
    borderWidths: {
        readonly thin: "1px";
        readonly mid: "2px";
        readonly thick: "4px";
    };
    fonts: {
        readonly default: "DM Sans, sans-serif";
    };
    radii: {
        readonly 'rounded-xs': "4px";
        readonly 'rounded-sm': "8px";
        readonly 'rounded-md': "16px";
        readonly 'rounded-full': "999px";
    };
    space: {
        readonly 0: "0";
        readonly 1: "0.25rem";
        readonly 2: "0.5rem";
        readonly 3: "0.75rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 8: "2rem";
        readonly 10: "2.5rem";
        readonly 12: "3rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 40: "7rem";
    };
    zIndices: {
        readonly overlay: 9995;
        readonly modal: 9999;
    };
}, {
    width: "spacing";
    height: "spacing";
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    blockSize: "sizes";
    minBlockSize: "sizes";
    maxBlockSize: "sizes";
    inlineSize: "sizes";
    minInlineSize: "sizes";
    maxInlineSize: "sizes";
    minWidth: "sizes";
    maxWidth: "sizes";
    minHeight: "sizes";
    maxHeight: "sizes";
    flexBasis: "sizes";
    gridTemplateColumns: "sizes";
    gridTemplateRows: "sizes";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
type DropdownTriggerProps = ComponentProps<typeof StyledTrigger$1>;
declare function DropdownTrigger(props: DropdownTriggerProps): JSX.Element;

declare const StyledDropdown: _stitches_react_types_styled_component.StyledComponent<react.ForwardRefExoticComponent<DropdownMenu.DropdownMenuItemProps & react.RefAttributes<HTMLDivElement>>, {}, {
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, _stitches_react_types_css_util.CSS<{
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, {
    colors: {
        readonly 'primary-50': "#DEECFF";
        readonly 'primary-100': "#BAD6FF";
        readonly 'primary-200': "#82B5FF";
        readonly 'primary-300': "#549AFF";
        readonly 'primary-400': "#217CFF";
        readonly 'primary-500': "#005CE1";
        readonly 'primary-600': "#004BB7";
        readonly 'primary-700': "#003C93";
        readonly 'primary-800': "#002F72";
        readonly 'primary-900': "#00204E";
        readonly 'secondary-50': "#FFF2C0";
        readonly 'secondary-100': "#FFE78C";
        readonly 'secondary-200': "#FFDE66";
        readonly 'secondary-300': "#FFD94A";
        readonly 'secondary-400': "#FFD229";
        readonly 'secondary-500': "#FBC80B";
        readonly 'secondary-600': "#E5B400";
        readonly 'secondary-700': "#C59A00";
        readonly 'secondary-800': "#A38000";
        readonly 'secondary-900': "#7A6000";
        readonly 'gray-50': "#FAFAFA";
        readonly 'gray-100': "#EDEDED";
        readonly 'gray-200': "#DDDDDD";
        readonly 'gray-300': "#BCBCBC";
        readonly 'gray-400': "#969696";
        readonly 'gray-500': "#787878";
        readonly 'gray-600': "#606060";
        readonly 'gray-700': "#484848";
        readonly 'gray-800': "#323232";
        readonly 'gray-900': "#222222";
        readonly 'success-light': "#04D361";
        readonly 'success-dark': "#1B873F";
        readonly 'danger-light': "#F75A68";
        readonly 'danger-dark': "#CC2937";
    };
    fontSizes: {
        readonly xs: "0.75rem";
        readonly sm: "0.875rem";
        readonly md: "1rem";
        readonly lg: "1.25rem";
        readonly xl: "1.5rem";
        readonly '2xl': "2rem";
        readonly '3xl': "3rem";
        readonly '4xl': "4rem";
    };
    fontWeights: {
        readonly regular: 400;
        readonly medium: 600;
        readonly bold: 700;
    };
    lineHeights: {
        readonly shorter: "120%";
        readonly short: "140%";
        readonly tall: "160%";
        readonly taller: "180%";
    };
    borderWidths: {
        readonly thin: "1px";
        readonly mid: "2px";
        readonly thick: "4px";
    };
    fonts: {
        readonly default: "DM Sans, sans-serif";
    };
    radii: {
        readonly 'rounded-xs': "4px";
        readonly 'rounded-sm': "8px";
        readonly 'rounded-md': "16px";
        readonly 'rounded-full': "999px";
    };
    space: {
        readonly 0: "0";
        readonly 1: "0.25rem";
        readonly 2: "0.5rem";
        readonly 3: "0.75rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 8: "2rem";
        readonly 10: "2.5rem";
        readonly 12: "3rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 40: "7rem";
    };
    zIndices: {
        readonly overlay: 9995;
        readonly modal: 9999;
    };
}, {
    width: "spacing";
    height: "spacing";
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    blockSize: "sizes";
    minBlockSize: "sizes";
    maxBlockSize: "sizes";
    inlineSize: "sizes";
    minInlineSize: "sizes";
    maxInlineSize: "sizes";
    minWidth: "sizes";
    maxWidth: "sizes";
    minHeight: "sizes";
    maxHeight: "sizes";
    flexBasis: "sizes";
    gridTemplateColumns: "sizes";
    gridTemplateRows: "sizes";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
type DropdownProps = ComponentProps<typeof StyledDropdown>;
declare function Dropdown(props: DropdownProps): JSX.Element;

declare const StyledContent$1: _stitches_react_types_styled_component.StyledComponent<react.ForwardRefExoticComponent<RadixTooltip.TooltipContentProps & react.RefAttributes<HTMLDivElement>>, {}, {
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, _stitches_react_types_css_util.CSS<{
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, {
    colors: {
        readonly 'primary-50': "#DEECFF";
        readonly 'primary-100': "#BAD6FF";
        readonly 'primary-200': "#82B5FF";
        readonly 'primary-300': "#549AFF";
        readonly 'primary-400': "#217CFF";
        readonly 'primary-500': "#005CE1";
        readonly 'primary-600': "#004BB7";
        readonly 'primary-700': "#003C93";
        readonly 'primary-800': "#002F72";
        readonly 'primary-900': "#00204E";
        readonly 'secondary-50': "#FFF2C0";
        readonly 'secondary-100': "#FFE78C";
        readonly 'secondary-200': "#FFDE66";
        readonly 'secondary-300': "#FFD94A";
        readonly 'secondary-400': "#FFD229";
        readonly 'secondary-500': "#FBC80B";
        readonly 'secondary-600': "#E5B400";
        readonly 'secondary-700': "#C59A00";
        readonly 'secondary-800': "#A38000";
        readonly 'secondary-900': "#7A6000";
        readonly 'gray-50': "#FAFAFA";
        readonly 'gray-100': "#EDEDED";
        readonly 'gray-200': "#DDDDDD";
        readonly 'gray-300': "#BCBCBC";
        readonly 'gray-400': "#969696";
        readonly 'gray-500': "#787878";
        readonly 'gray-600': "#606060";
        readonly 'gray-700': "#484848";
        readonly 'gray-800': "#323232";
        readonly 'gray-900': "#222222";
        readonly 'success-light': "#04D361";
        readonly 'success-dark': "#1B873F";
        readonly 'danger-light': "#F75A68";
        readonly 'danger-dark': "#CC2937";
    };
    fontSizes: {
        readonly xs: "0.75rem";
        readonly sm: "0.875rem";
        readonly md: "1rem";
        readonly lg: "1.25rem";
        readonly xl: "1.5rem";
        readonly '2xl': "2rem";
        readonly '3xl': "3rem";
        readonly '4xl': "4rem";
    };
    fontWeights: {
        readonly regular: 400;
        readonly medium: 600;
        readonly bold: 700;
    };
    lineHeights: {
        readonly shorter: "120%";
        readonly short: "140%";
        readonly tall: "160%";
        readonly taller: "180%";
    };
    borderWidths: {
        readonly thin: "1px";
        readonly mid: "2px";
        readonly thick: "4px";
    };
    fonts: {
        readonly default: "DM Sans, sans-serif";
    };
    radii: {
        readonly 'rounded-xs': "4px";
        readonly 'rounded-sm': "8px";
        readonly 'rounded-md': "16px";
        readonly 'rounded-full': "999px";
    };
    space: {
        readonly 0: "0";
        readonly 1: "0.25rem";
        readonly 2: "0.5rem";
        readonly 3: "0.75rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 8: "2rem";
        readonly 10: "2.5rem";
        readonly 12: "3rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 40: "7rem";
    };
    zIndices: {
        readonly overlay: 9995;
        readonly modal: 9999;
    };
}, {
    width: "spacing";
    height: "spacing";
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    blockSize: "sizes";
    minBlockSize: "sizes";
    maxBlockSize: "sizes";
    inlineSize: "sizes";
    minInlineSize: "sizes";
    maxInlineSize: "sizes";
    minWidth: "sizes";
    maxWidth: "sizes";
    minHeight: "sizes";
    maxHeight: "sizes";
    flexBasis: "sizes";
    gridTemplateColumns: "sizes";
    gridTemplateRows: "sizes";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
type TooltipContentProps = ComponentProps<typeof StyledContent$1>;
declare function TooltipContent(props: TooltipContentProps): JSX.Element;

declare const StyledTtigger: _stitches_react_types_styled_component.StyledComponent<react.ForwardRefExoticComponent<RadixTooltip.TooltipTriggerProps & react.RefAttributes<HTMLButtonElement>>, {}, {
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, _stitches_react_types_css_util.CSS<{
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, {
    colors: {
        readonly 'primary-50': "#DEECFF";
        readonly 'primary-100': "#BAD6FF";
        readonly 'primary-200': "#82B5FF";
        readonly 'primary-300': "#549AFF";
        readonly 'primary-400': "#217CFF";
        readonly 'primary-500': "#005CE1";
        readonly 'primary-600': "#004BB7";
        readonly 'primary-700': "#003C93";
        readonly 'primary-800': "#002F72";
        readonly 'primary-900': "#00204E";
        readonly 'secondary-50': "#FFF2C0";
        readonly 'secondary-100': "#FFE78C";
        readonly 'secondary-200': "#FFDE66";
        readonly 'secondary-300': "#FFD94A";
        readonly 'secondary-400': "#FFD229";
        readonly 'secondary-500': "#FBC80B";
        readonly 'secondary-600': "#E5B400";
        readonly 'secondary-700': "#C59A00";
        readonly 'secondary-800': "#A38000";
        readonly 'secondary-900': "#7A6000";
        readonly 'gray-50': "#FAFAFA";
        readonly 'gray-100': "#EDEDED";
        readonly 'gray-200': "#DDDDDD";
        readonly 'gray-300': "#BCBCBC";
        readonly 'gray-400': "#969696";
        readonly 'gray-500': "#787878";
        readonly 'gray-600': "#606060";
        readonly 'gray-700': "#484848";
        readonly 'gray-800': "#323232";
        readonly 'gray-900': "#222222";
        readonly 'success-light': "#04D361";
        readonly 'success-dark': "#1B873F";
        readonly 'danger-light': "#F75A68";
        readonly 'danger-dark': "#CC2937";
    };
    fontSizes: {
        readonly xs: "0.75rem";
        readonly sm: "0.875rem";
        readonly md: "1rem";
        readonly lg: "1.25rem";
        readonly xl: "1.5rem";
        readonly '2xl': "2rem";
        readonly '3xl': "3rem";
        readonly '4xl': "4rem";
    };
    fontWeights: {
        readonly regular: 400;
        readonly medium: 600;
        readonly bold: 700;
    };
    lineHeights: {
        readonly shorter: "120%";
        readonly short: "140%";
        readonly tall: "160%";
        readonly taller: "180%";
    };
    borderWidths: {
        readonly thin: "1px";
        readonly mid: "2px";
        readonly thick: "4px";
    };
    fonts: {
        readonly default: "DM Sans, sans-serif";
    };
    radii: {
        readonly 'rounded-xs': "4px";
        readonly 'rounded-sm': "8px";
        readonly 'rounded-md': "16px";
        readonly 'rounded-full': "999px";
    };
    space: {
        readonly 0: "0";
        readonly 1: "0.25rem";
        readonly 2: "0.5rem";
        readonly 3: "0.75rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 8: "2rem";
        readonly 10: "2.5rem";
        readonly 12: "3rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 40: "7rem";
    };
    zIndices: {
        readonly overlay: 9995;
        readonly modal: 9999;
    };
}, {
    width: "spacing";
    height: "spacing";
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    blockSize: "sizes";
    minBlockSize: "sizes";
    maxBlockSize: "sizes";
    inlineSize: "sizes";
    minInlineSize: "sizes";
    maxInlineSize: "sizes";
    minWidth: "sizes";
    maxWidth: "sizes";
    minHeight: "sizes";
    maxHeight: "sizes";
    flexBasis: "sizes";
    gridTemplateColumns: "sizes";
    gridTemplateRows: "sizes";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
type TooltipTriggerProps = ComponentProps<typeof StyledTtigger>;
declare function TooltipTrigger(props: TooltipTriggerProps): JSX.Element;

declare const StyledTooltip: _stitches_react_types_styled_component.StyledComponent<react.FC<RadixTooltip.TooltipProps>, {}, {
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, _stitches_react_types_css_util.CSS<{
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, {
    colors: {
        readonly 'primary-50': "#DEECFF";
        readonly 'primary-100': "#BAD6FF";
        readonly 'primary-200': "#82B5FF";
        readonly 'primary-300': "#549AFF";
        readonly 'primary-400': "#217CFF";
        readonly 'primary-500': "#005CE1";
        readonly 'primary-600': "#004BB7";
        readonly 'primary-700': "#003C93";
        readonly 'primary-800': "#002F72";
        readonly 'primary-900': "#00204E";
        readonly 'secondary-50': "#FFF2C0";
        readonly 'secondary-100': "#FFE78C";
        readonly 'secondary-200': "#FFDE66";
        readonly 'secondary-300': "#FFD94A";
        readonly 'secondary-400': "#FFD229";
        readonly 'secondary-500': "#FBC80B";
        readonly 'secondary-600': "#E5B400";
        readonly 'secondary-700': "#C59A00";
        readonly 'secondary-800': "#A38000";
        readonly 'secondary-900': "#7A6000";
        readonly 'gray-50': "#FAFAFA";
        readonly 'gray-100': "#EDEDED";
        readonly 'gray-200': "#DDDDDD";
        readonly 'gray-300': "#BCBCBC";
        readonly 'gray-400': "#969696";
        readonly 'gray-500': "#787878";
        readonly 'gray-600': "#606060";
        readonly 'gray-700': "#484848";
        readonly 'gray-800': "#323232";
        readonly 'gray-900': "#222222";
        readonly 'success-light': "#04D361";
        readonly 'success-dark': "#1B873F";
        readonly 'danger-light': "#F75A68";
        readonly 'danger-dark': "#CC2937";
    };
    fontSizes: {
        readonly xs: "0.75rem";
        readonly sm: "0.875rem";
        readonly md: "1rem";
        readonly lg: "1.25rem";
        readonly xl: "1.5rem";
        readonly '2xl': "2rem";
        readonly '3xl': "3rem";
        readonly '4xl': "4rem";
    };
    fontWeights: {
        readonly regular: 400;
        readonly medium: 600;
        readonly bold: 700;
    };
    lineHeights: {
        readonly shorter: "120%";
        readonly short: "140%";
        readonly tall: "160%";
        readonly taller: "180%";
    };
    borderWidths: {
        readonly thin: "1px";
        readonly mid: "2px";
        readonly thick: "4px";
    };
    fonts: {
        readonly default: "DM Sans, sans-serif";
    };
    radii: {
        readonly 'rounded-xs': "4px";
        readonly 'rounded-sm': "8px";
        readonly 'rounded-md': "16px";
        readonly 'rounded-full': "999px";
    };
    space: {
        readonly 0: "0";
        readonly 1: "0.25rem";
        readonly 2: "0.5rem";
        readonly 3: "0.75rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 8: "2rem";
        readonly 10: "2.5rem";
        readonly 12: "3rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 40: "7rem";
    };
    zIndices: {
        readonly overlay: 9995;
        readonly modal: 9999;
    };
}, {
    width: "spacing";
    height: "spacing";
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    blockSize: "sizes";
    minBlockSize: "sizes";
    maxBlockSize: "sizes";
    inlineSize: "sizes";
    minInlineSize: "sizes";
    maxInlineSize: "sizes";
    minWidth: "sizes";
    maxWidth: "sizes";
    minHeight: "sizes";
    maxHeight: "sizes";
    flexBasis: "sizes";
    gridTemplateColumns: "sizes";
    gridTemplateRows: "sizes";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
type TooltipProps = ComponentProps<typeof StyledTooltip>;
declare function Tooltip(props: TooltipProps): JSX.Element;

declare const StyledContent: _stitches_react_types_styled_component.StyledComponent<react.ForwardRefExoticComponent<Dialog.DialogContentProps & react.RefAttributes<HTMLDivElement>>, {}, {
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, _stitches_react_types_css_util.CSS<{
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, {
    colors: {
        readonly 'primary-50': "#DEECFF";
        readonly 'primary-100': "#BAD6FF";
        readonly 'primary-200': "#82B5FF";
        readonly 'primary-300': "#549AFF";
        readonly 'primary-400': "#217CFF";
        readonly 'primary-500': "#005CE1";
        readonly 'primary-600': "#004BB7";
        readonly 'primary-700': "#003C93";
        readonly 'primary-800': "#002F72";
        readonly 'primary-900': "#00204E";
        readonly 'secondary-50': "#FFF2C0";
        readonly 'secondary-100': "#FFE78C";
        readonly 'secondary-200': "#FFDE66";
        readonly 'secondary-300': "#FFD94A";
        readonly 'secondary-400': "#FFD229";
        readonly 'secondary-500': "#FBC80B";
        readonly 'secondary-600': "#E5B400";
        readonly 'secondary-700': "#C59A00";
        readonly 'secondary-800': "#A38000";
        readonly 'secondary-900': "#7A6000";
        readonly 'gray-50': "#FAFAFA";
        readonly 'gray-100': "#EDEDED";
        readonly 'gray-200': "#DDDDDD";
        readonly 'gray-300': "#BCBCBC";
        readonly 'gray-400': "#969696";
        readonly 'gray-500': "#787878";
        readonly 'gray-600': "#606060";
        readonly 'gray-700': "#484848";
        readonly 'gray-800': "#323232";
        readonly 'gray-900': "#222222";
        readonly 'success-light': "#04D361";
        readonly 'success-dark': "#1B873F";
        readonly 'danger-light': "#F75A68";
        readonly 'danger-dark': "#CC2937";
    };
    fontSizes: {
        readonly xs: "0.75rem";
        readonly sm: "0.875rem";
        readonly md: "1rem";
        readonly lg: "1.25rem";
        readonly xl: "1.5rem";
        readonly '2xl': "2rem";
        readonly '3xl': "3rem";
        readonly '4xl': "4rem";
    };
    fontWeights: {
        readonly regular: 400;
        readonly medium: 600;
        readonly bold: 700;
    };
    lineHeights: {
        readonly shorter: "120%";
        readonly short: "140%";
        readonly tall: "160%";
        readonly taller: "180%";
    };
    borderWidths: {
        readonly thin: "1px";
        readonly mid: "2px";
        readonly thick: "4px";
    };
    fonts: {
        readonly default: "DM Sans, sans-serif";
    };
    radii: {
        readonly 'rounded-xs': "4px";
        readonly 'rounded-sm': "8px";
        readonly 'rounded-md': "16px";
        readonly 'rounded-full': "999px";
    };
    space: {
        readonly 0: "0";
        readonly 1: "0.25rem";
        readonly 2: "0.5rem";
        readonly 3: "0.75rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 8: "2rem";
        readonly 10: "2.5rem";
        readonly 12: "3rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 40: "7rem";
    };
    zIndices: {
        readonly overlay: 9995;
        readonly modal: 9999;
    };
}, {
    width: "spacing";
    height: "spacing";
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    blockSize: "sizes";
    minBlockSize: "sizes";
    maxBlockSize: "sizes";
    inlineSize: "sizes";
    minInlineSize: "sizes";
    maxInlineSize: "sizes";
    minWidth: "sizes";
    maxWidth: "sizes";
    minHeight: "sizes";
    maxHeight: "sizes";
    flexBasis: "sizes";
    gridTemplateColumns: "sizes";
    gridTemplateRows: "sizes";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
type ModalContentProps = ComponentProps<typeof StyledContent>;
declare function ModalContent(props: ModalContentProps): JSX.Element;

declare const StyledDescription: _stitches_react_types_styled_component.StyledComponent<react.ForwardRefExoticComponent<Dialog.DialogDescriptionProps & react.RefAttributes<HTMLParagraphElement>>, {}, {
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, _stitches_react_types_css_util.CSS<{
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, {
    colors: {
        readonly 'primary-50': "#DEECFF";
        readonly 'primary-100': "#BAD6FF";
        readonly 'primary-200': "#82B5FF";
        readonly 'primary-300': "#549AFF";
        readonly 'primary-400': "#217CFF";
        readonly 'primary-500': "#005CE1";
        readonly 'primary-600': "#004BB7";
        readonly 'primary-700': "#003C93";
        readonly 'primary-800': "#002F72";
        readonly 'primary-900': "#00204E";
        readonly 'secondary-50': "#FFF2C0";
        readonly 'secondary-100': "#FFE78C";
        readonly 'secondary-200': "#FFDE66";
        readonly 'secondary-300': "#FFD94A";
        readonly 'secondary-400': "#FFD229";
        readonly 'secondary-500': "#FBC80B";
        readonly 'secondary-600': "#E5B400";
        readonly 'secondary-700': "#C59A00";
        readonly 'secondary-800': "#A38000";
        readonly 'secondary-900': "#7A6000";
        readonly 'gray-50': "#FAFAFA";
        readonly 'gray-100': "#EDEDED";
        readonly 'gray-200': "#DDDDDD";
        readonly 'gray-300': "#BCBCBC";
        readonly 'gray-400': "#969696";
        readonly 'gray-500': "#787878";
        readonly 'gray-600': "#606060";
        readonly 'gray-700': "#484848";
        readonly 'gray-800': "#323232";
        readonly 'gray-900': "#222222";
        readonly 'success-light': "#04D361";
        readonly 'success-dark': "#1B873F";
        readonly 'danger-light': "#F75A68";
        readonly 'danger-dark': "#CC2937";
    };
    fontSizes: {
        readonly xs: "0.75rem";
        readonly sm: "0.875rem";
        readonly md: "1rem";
        readonly lg: "1.25rem";
        readonly xl: "1.5rem";
        readonly '2xl': "2rem";
        readonly '3xl': "3rem";
        readonly '4xl': "4rem";
    };
    fontWeights: {
        readonly regular: 400;
        readonly medium: 600;
        readonly bold: 700;
    };
    lineHeights: {
        readonly shorter: "120%";
        readonly short: "140%";
        readonly tall: "160%";
        readonly taller: "180%";
    };
    borderWidths: {
        readonly thin: "1px";
        readonly mid: "2px";
        readonly thick: "4px";
    };
    fonts: {
        readonly default: "DM Sans, sans-serif";
    };
    radii: {
        readonly 'rounded-xs': "4px";
        readonly 'rounded-sm': "8px";
        readonly 'rounded-md': "16px";
        readonly 'rounded-full': "999px";
    };
    space: {
        readonly 0: "0";
        readonly 1: "0.25rem";
        readonly 2: "0.5rem";
        readonly 3: "0.75rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 8: "2rem";
        readonly 10: "2.5rem";
        readonly 12: "3rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 40: "7rem";
    };
    zIndices: {
        readonly overlay: 9995;
        readonly modal: 9999;
    };
}, {
    width: "spacing";
    height: "spacing";
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    blockSize: "sizes";
    minBlockSize: "sizes";
    maxBlockSize: "sizes";
    inlineSize: "sizes";
    minInlineSize: "sizes";
    maxInlineSize: "sizes";
    minWidth: "sizes";
    maxWidth: "sizes";
    minHeight: "sizes";
    maxHeight: "sizes";
    flexBasis: "sizes";
    gridTemplateColumns: "sizes";
    gridTemplateRows: "sizes";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
type ModalDescriptionProps = ComponentProps<typeof StyledDescription>;
declare function ModalDescription(props: ModalDescriptionProps): JSX.Element;

declare const StyledTitle: _stitches_react_types_styled_component.StyledComponent<react.ForwardRefExoticComponent<Dialog.DialogTitleProps & react.RefAttributes<HTMLHeadingElement>>, {}, {
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, _stitches_react_types_css_util.CSS<{
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, {
    colors: {
        readonly 'primary-50': "#DEECFF";
        readonly 'primary-100': "#BAD6FF";
        readonly 'primary-200': "#82B5FF";
        readonly 'primary-300': "#549AFF";
        readonly 'primary-400': "#217CFF";
        readonly 'primary-500': "#005CE1";
        readonly 'primary-600': "#004BB7";
        readonly 'primary-700': "#003C93";
        readonly 'primary-800': "#002F72";
        readonly 'primary-900': "#00204E";
        readonly 'secondary-50': "#FFF2C0";
        readonly 'secondary-100': "#FFE78C";
        readonly 'secondary-200': "#FFDE66";
        readonly 'secondary-300': "#FFD94A";
        readonly 'secondary-400': "#FFD229";
        readonly 'secondary-500': "#FBC80B";
        readonly 'secondary-600': "#E5B400";
        readonly 'secondary-700': "#C59A00";
        readonly 'secondary-800': "#A38000";
        readonly 'secondary-900': "#7A6000";
        readonly 'gray-50': "#FAFAFA";
        readonly 'gray-100': "#EDEDED";
        readonly 'gray-200': "#DDDDDD";
        readonly 'gray-300': "#BCBCBC";
        readonly 'gray-400': "#969696";
        readonly 'gray-500': "#787878";
        readonly 'gray-600': "#606060";
        readonly 'gray-700': "#484848";
        readonly 'gray-800': "#323232";
        readonly 'gray-900': "#222222";
        readonly 'success-light': "#04D361";
        readonly 'success-dark': "#1B873F";
        readonly 'danger-light': "#F75A68";
        readonly 'danger-dark': "#CC2937";
    };
    fontSizes: {
        readonly xs: "0.75rem";
        readonly sm: "0.875rem";
        readonly md: "1rem";
        readonly lg: "1.25rem";
        readonly xl: "1.5rem";
        readonly '2xl': "2rem";
        readonly '3xl': "3rem";
        readonly '4xl': "4rem";
    };
    fontWeights: {
        readonly regular: 400;
        readonly medium: 600;
        readonly bold: 700;
    };
    lineHeights: {
        readonly shorter: "120%";
        readonly short: "140%";
        readonly tall: "160%";
        readonly taller: "180%";
    };
    borderWidths: {
        readonly thin: "1px";
        readonly mid: "2px";
        readonly thick: "4px";
    };
    fonts: {
        readonly default: "DM Sans, sans-serif";
    };
    radii: {
        readonly 'rounded-xs': "4px";
        readonly 'rounded-sm': "8px";
        readonly 'rounded-md': "16px";
        readonly 'rounded-full': "999px";
    };
    space: {
        readonly 0: "0";
        readonly 1: "0.25rem";
        readonly 2: "0.5rem";
        readonly 3: "0.75rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 8: "2rem";
        readonly 10: "2.5rem";
        readonly 12: "3rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 40: "7rem";
    };
    zIndices: {
        readonly overlay: 9995;
        readonly modal: 9999;
    };
}, {
    width: "spacing";
    height: "spacing";
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    blockSize: "sizes";
    minBlockSize: "sizes";
    maxBlockSize: "sizes";
    inlineSize: "sizes";
    minInlineSize: "sizes";
    maxInlineSize: "sizes";
    minWidth: "sizes";
    maxWidth: "sizes";
    minHeight: "sizes";
    maxHeight: "sizes";
    flexBasis: "sizes";
    gridTemplateColumns: "sizes";
    gridTemplateRows: "sizes";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
type ModalTitleProps = ComponentProps<typeof StyledTitle>;
declare function ModalTitle(props: ModalTitleProps): JSX.Element;

declare const StyledTrigger: _stitches_react_types_styled_component.StyledComponent<react.ForwardRefExoticComponent<Dialog.DialogTriggerProps & react.RefAttributes<HTMLButtonElement>>, {}, {
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, _stitches_react_types_css_util.CSS<{
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, {
    colors: {
        readonly 'primary-50': "#DEECFF";
        readonly 'primary-100': "#BAD6FF";
        readonly 'primary-200': "#82B5FF";
        readonly 'primary-300': "#549AFF";
        readonly 'primary-400': "#217CFF";
        readonly 'primary-500': "#005CE1";
        readonly 'primary-600': "#004BB7";
        readonly 'primary-700': "#003C93";
        readonly 'primary-800': "#002F72";
        readonly 'primary-900': "#00204E";
        readonly 'secondary-50': "#FFF2C0";
        readonly 'secondary-100': "#FFE78C";
        readonly 'secondary-200': "#FFDE66";
        readonly 'secondary-300': "#FFD94A";
        readonly 'secondary-400': "#FFD229";
        readonly 'secondary-500': "#FBC80B";
        readonly 'secondary-600': "#E5B400";
        readonly 'secondary-700': "#C59A00";
        readonly 'secondary-800': "#A38000";
        readonly 'secondary-900': "#7A6000";
        readonly 'gray-50': "#FAFAFA";
        readonly 'gray-100': "#EDEDED";
        readonly 'gray-200': "#DDDDDD";
        readonly 'gray-300': "#BCBCBC";
        readonly 'gray-400': "#969696";
        readonly 'gray-500': "#787878";
        readonly 'gray-600': "#606060";
        readonly 'gray-700': "#484848";
        readonly 'gray-800': "#323232";
        readonly 'gray-900': "#222222";
        readonly 'success-light': "#04D361";
        readonly 'success-dark': "#1B873F";
        readonly 'danger-light': "#F75A68";
        readonly 'danger-dark': "#CC2937";
    };
    fontSizes: {
        readonly xs: "0.75rem";
        readonly sm: "0.875rem";
        readonly md: "1rem";
        readonly lg: "1.25rem";
        readonly xl: "1.5rem";
        readonly '2xl': "2rem";
        readonly '3xl': "3rem";
        readonly '4xl': "4rem";
    };
    fontWeights: {
        readonly regular: 400;
        readonly medium: 600;
        readonly bold: 700;
    };
    lineHeights: {
        readonly shorter: "120%";
        readonly short: "140%";
        readonly tall: "160%";
        readonly taller: "180%";
    };
    borderWidths: {
        readonly thin: "1px";
        readonly mid: "2px";
        readonly thick: "4px";
    };
    fonts: {
        readonly default: "DM Sans, sans-serif";
    };
    radii: {
        readonly 'rounded-xs': "4px";
        readonly 'rounded-sm': "8px";
        readonly 'rounded-md': "16px";
        readonly 'rounded-full': "999px";
    };
    space: {
        readonly 0: "0";
        readonly 1: "0.25rem";
        readonly 2: "0.5rem";
        readonly 3: "0.75rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 8: "2rem";
        readonly 10: "2.5rem";
        readonly 12: "3rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 40: "7rem";
    };
    zIndices: {
        readonly overlay: 9995;
        readonly modal: 9999;
    };
}, {
    width: "spacing";
    height: "spacing";
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    blockSize: "sizes";
    minBlockSize: "sizes";
    maxBlockSize: "sizes";
    inlineSize: "sizes";
    minInlineSize: "sizes";
    maxInlineSize: "sizes";
    minWidth: "sizes";
    maxWidth: "sizes";
    minHeight: "sizes";
    maxHeight: "sizes";
    flexBasis: "sizes";
    gridTemplateColumns: "sizes";
    gridTemplateRows: "sizes";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
type ModalTriggerProps = ComponentProps<typeof StyledTrigger>;
declare function ModalTrigger(props: ModalTriggerProps): JSX.Element;

declare const StyledModal: _stitches_react_types_styled_component.StyledComponent<react.FC<Dialog.DialogProps>, {}, {
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, _stitches_react_types_css_util.CSS<{
    web: "(max-width: 1280px)";
    medium: "(max-width: 992px)";
    mobile: "(max-width: 768px)";
}, {
    colors: {
        readonly 'primary-50': "#DEECFF";
        readonly 'primary-100': "#BAD6FF";
        readonly 'primary-200': "#82B5FF";
        readonly 'primary-300': "#549AFF";
        readonly 'primary-400': "#217CFF";
        readonly 'primary-500': "#005CE1";
        readonly 'primary-600': "#004BB7";
        readonly 'primary-700': "#003C93";
        readonly 'primary-800': "#002F72";
        readonly 'primary-900': "#00204E";
        readonly 'secondary-50': "#FFF2C0";
        readonly 'secondary-100': "#FFE78C";
        readonly 'secondary-200': "#FFDE66";
        readonly 'secondary-300': "#FFD94A";
        readonly 'secondary-400': "#FFD229";
        readonly 'secondary-500': "#FBC80B";
        readonly 'secondary-600': "#E5B400";
        readonly 'secondary-700': "#C59A00";
        readonly 'secondary-800': "#A38000";
        readonly 'secondary-900': "#7A6000";
        readonly 'gray-50': "#FAFAFA";
        readonly 'gray-100': "#EDEDED";
        readonly 'gray-200': "#DDDDDD";
        readonly 'gray-300': "#BCBCBC";
        readonly 'gray-400': "#969696";
        readonly 'gray-500': "#787878";
        readonly 'gray-600': "#606060";
        readonly 'gray-700': "#484848";
        readonly 'gray-800': "#323232";
        readonly 'gray-900': "#222222";
        readonly 'success-light': "#04D361";
        readonly 'success-dark': "#1B873F";
        readonly 'danger-light': "#F75A68";
        readonly 'danger-dark': "#CC2937";
    };
    fontSizes: {
        readonly xs: "0.75rem";
        readonly sm: "0.875rem";
        readonly md: "1rem";
        readonly lg: "1.25rem";
        readonly xl: "1.5rem";
        readonly '2xl': "2rem";
        readonly '3xl': "3rem";
        readonly '4xl': "4rem";
    };
    fontWeights: {
        readonly regular: 400;
        readonly medium: 600;
        readonly bold: 700;
    };
    lineHeights: {
        readonly shorter: "120%";
        readonly short: "140%";
        readonly tall: "160%";
        readonly taller: "180%";
    };
    borderWidths: {
        readonly thin: "1px";
        readonly mid: "2px";
        readonly thick: "4px";
    };
    fonts: {
        readonly default: "DM Sans, sans-serif";
    };
    radii: {
        readonly 'rounded-xs': "4px";
        readonly 'rounded-sm': "8px";
        readonly 'rounded-md': "16px";
        readonly 'rounded-full': "999px";
    };
    space: {
        readonly 0: "0";
        readonly 1: "0.25rem";
        readonly 2: "0.5rem";
        readonly 3: "0.75rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 8: "2rem";
        readonly 10: "2.5rem";
        readonly 12: "3rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 40: "7rem";
    };
    zIndices: {
        readonly overlay: 9995;
        readonly modal: 9999;
    };
}, {
    width: "spacing";
    height: "spacing";
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    blockSize: "sizes";
    minBlockSize: "sizes";
    maxBlockSize: "sizes";
    inlineSize: "sizes";
    minInlineSize: "sizes";
    maxInlineSize: "sizes";
    minWidth: "sizes";
    maxWidth: "sizes";
    minHeight: "sizes";
    maxHeight: "sizes";
    flexBasis: "sizes";
    gridTemplateColumns: "sizes";
    gridTemplateRows: "sizes";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
type ModalProps = ComponentProps<typeof StyledModal>;
declare function Modal(props: ModalProps): JSX.Element;

export { Alert, AlertProps, AlertTitle, AlertTitleProps, Avatar, AvatarContainer, AvatarFallback, AvatarProps, Badge, BadgeProps, Box, BoxProps, Breadcrumb, BreadcrumbItem, BreadcrumbProps, Button, ButtonProps, Checkbox, CheckboxContainer, CheckboxIndicator, CheckboxProps, Chip, ChipProps, ColumnType, DataSourceType, Dropdown, DropdownContent, DropdownContentProps, DropdownDivider, DropdownDividerProps, DropdownItem, DropdownItemProps, DropdownProps, DropdownTrigger, DropdownTriggerProps, Heading, HeadingProps, IconButton, IconButtonContainer, IconButtonProps, Input, InputContainer, InputContent, Modal, ModalContent, ModalContentProps, ModalDescription, ModalDescriptionProps, ModalProps, ModalTitle, ModalTitleProps, ModalTrigger, ModalTriggerProps, Multistep, MultistepProps, RadioButton, RadioButtonContainer, RadioButtonIndicator, RadioButtonItem, RadioButtonProps, RowType, Skeleton, SkeletonProps, StyledBreadcrumb, StyledBreadcrumbItem, Table, TableProps, Text, TextField, TextFieldProps, TextProps, Tooltip, TooltipContent, TooltipContentProps, TooltipProps, TooltipTrigger, TooltipTriggerProps };
